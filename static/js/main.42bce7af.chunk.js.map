{"version":3,"sources":["../../dist/index.es.js","examples/example-basic.jsx","examples/example-function.jsx","examples/example-multiple-watches.jsx","examples/example-style.jsx","examples/example-values.jsx","examples/example-benchmark.jsx","App.js","index.js"],"names":["global","__webpack_require__","d","__webpack_exports__","ValidatedForm","FormGuard","validators","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","phone","value","PHONE_REGEX","test","email","EMAIL_REGEX","minLength","len","length","maxLength","required","arguments","undefined","Object","keys","asArray","val","Array","isArray","commonjsGlobal","globalThis","window","self","module","lodash_mergewith","exports","LARGE_ARRAY_SIZE","HASH_UNDEFINED","HOT_COUNT","HOT_SPAN","MAX_SAFE_INTEGER","argsTag","asyncTag","funcTag","genTag","nullTag","objectTag","proxyTag","undefinedTag","reIsHostCtor","reIsUint","typedArrayTags","freeGlobal","freeSelf","root","Function","freeExports","nodeType","freeModule","moduleExports","freeProcess","process","nodeUtil","binding","e","nodeIsTypedArray","isTypedArray","safeGet","object","key","func","transform","arrayProto","prototype","funcProto","objectProto","coreJsData","funcToString","toString","hasOwnProperty","maskSrcKey","uid","exec","IE_PROTO","nativeObjectToString","objectCtorString","call","reIsNative","RegExp","replace","Buffer","Symbol","Uint8Array","allocUnsafe","getPrototype","getPrototypeOf","arg","objectCreate","create","propertyIsEnumerable","splice","symToStringTag","toStringTag","defineProperty","getNative","nativeIsBuffer","isBuffer","nativeMax","Math","max","nativeNow","Date","now","Map","nativeCreate","baseCreate","proto","isObject","result","Hash","entries","index","this","clear","entry","set","ListCache","MapCache","Stack","data","__data__","size","arrayLikeKeys","inherited","isArr","isArg","isArguments","isBuff","isType","skipIndexes","iteratee","baseTimes","String","isIndex","push","assignMergeValue","eq","baseAssignValue","assignValue","objValue","assocIndexOf","array","configurable","enumerable","writable","has","get","pop","hash","map","string","getMapData","pairs","fromRight","baseFor","keysFunc","iterable","props","baseGetTag","isOwn","tag","getRawTag","objectToString","baseIsArguments","isObjectLike","baseIsNative","isFunction","toSource","baseKeysIn","nativeKeysIn","isProto","isPrototype","baseMerge","source","srcIndex","customizer","stack","srcValue","mergeFunc","stacked","newValue","isCommon","isTyped","isArrayLike","copyArray","buffer","isDeep","slice","constructor","copy","cloneBuffer","typedArray","arrayBuffer","byteLength","cloneArrayBuffer","byteOffset","cloneTypedArray","Ctor","isPlainObject","isNew","copyObject","keysIn","toPlainObject","initCloneObject","baseMergeDeep","baseRest","start","setToString","args","otherArgs","thisArg","apply","overRest","identity","type","isKeyable","getValue","count","lastCalled","stamp","remaining","shortOut","other","isLength","baseUnary","assigner","mergeWith","sources","guard","isIterateeCall","fn","_ref","children","dirty","isvalid","a","createElement","className","obj","_extends","assign","target","i","slicedToArray","arr","iterator","_arr","_n","_d","_e","_s","_i","next","done","err","sliceIterator","TypeError","defaultValues","checkbox","select-multiple","file-multiple","id","name","onSubmit","_ref$formVals","formVals","stateBuffer","_useState","_useState2","state","setState","_useState3","_useState4","vals","setFormVals","formRef","managedChildren","injectProps","childNodes","Children","el","injected","hasChildren","isFormElement","includes","isGuard","multiple","select","file","getNormalizedType","substr","determineValue","isDirty","onChange","_onChange","handleFormElement","validatesWith","watches","reduce","groupDirty","curState","mergeState","curStateEmpty","markValid","invalidate","validated","acc","handleFormGuard","values","filter","s","setStateValueForAllElements","ref","preventDefault","resetForm","state1","state2","v1","v2","k","_e$target","checked","options","files","from","o","selected","updateState","setFormVal","current","reset","st","_ref2","_ref3","controlState","ExampleBasic","react_default","index_es","console","log","htmlFor","cb1","cb2","cb3","ExampleFunction","ExampleMultipleWatches","input1","input2","ExampleStyle","ExampleValues","comments","ExampleBenchmark","toConsumableArray","idx","concat","App","Fragment","href","example_basic","example_function","example_multiple_watches","example_style","example_values","example_benchmark","ReactDOM","render","src_App","document","getElementById"],"mappings":"wFAAA,SAAAA,GAAAC,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAA,IAAAC,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GACAD,EAAA,CACAI,MAAA,SAAAC,GACA,OAAAC,EAAAC,KAAAF,IAEAG,MAAA,SAAAH,GACA,OAAAI,EAAAF,KAAAF,IAEAK,UAAA,SAAAC,GACA,gBAAAN,GACA,OAAAA,EAAAO,QAAAD,IAGAE,UAAA,SAAAF,GACA,gBAAAN,GACA,OAAAA,EAAAO,QAAAD,IAGAG,SAAA,WACA,IAAAT,EAAAU,UAAAH,OAAA,QAAAI,IAAAD,UAAA,GAAAA,UAAA,MACA,wBAAAV,GAAA,OAAAA,QAAAW,IAAAX,GAAA,IAAAA,EAAAO,QAAA,IAAAK,OAAAC,KAAAb,GAAAO,QAAA,KAAAP,IAIAI,EAAA,scACAH,EAAA,qDAEAa,EAAA,SAAAC,GACA,OAAAC,MAAAC,QAAAF,KAAA,CAAAA,IAGAG,EAAA,qBAAAC,sBAAA,qBAAAC,cAAA,qBAAA/B,IAAA,qBAAAgC,UAAA,GAQA,IANAC,EAMAC,GAAA,SAAAD,EAAAE,GAWA,IAAAC,EAAA,IAGAC,EAAA,4BAGAC,EAAA,IACAC,EAAA,GAGAC,EAAA,iBAGAC,EAAA,qBAEAC,EAAA,yBAIAC,EAAA,oBACAC,EAAA,6BAGAC,EAAA,gBACAC,EAAA,kBACAC,EAAA,iBAIAC,EAAA,qBAqBAC,EAAA,8BAGAC,EAAA,mBAGAC,EAAA,GACAA,EAxBA,yBAwBAA,EAvBA,yBAuBAA,EAtBA,sBAsBAA,EArBA,uBAqBAA,EApBA,uBAoBAA,EAnBA,uBAmBAA,EAlBA,8BAkBAA,EAjBA,wBAiBAA,EAhBA,yBAgBA,EACAA,EAAAV,GAAAU,EA5CA,kBA4CAA,EA3BA,wBA2BAA,EA1CA,oBA0CAA,EA1BA,qBA0BAA,EAzCA,iBAyCAA,EAxCA,kBAwCAA,EAAAR,GAAAQ,EArCA,gBAqCAA,EApCA,mBAoCAA,EAAAL,GAAAK,EAhCA,mBAgCAA,EA/BA,gBA+BAA,EA9BA,mBA8BAA,EA5BA,qBA4BA,EAGA,IAAAC,EAAA,iBAAAvB,QAAAN,iBAAAM,EAGAwB,EAAA,iBAAArB,iBAAAT,iBAAAS,KAGAsB,EAAAF,GAAAC,GAAAE,SAAA,cAAAA,GAGAC,EAAArB,MAAAsB,UAAAtB,EAGAuB,EAAAF,GAAAvB,MAAAwB,UAAAxB,EAGA0B,EAAAD,KAAAvB,UAAAqB,EAGAI,EAAAD,GAAAP,EAAAS,QAGAC,EAAA,WACA,IACA,OAAAF,KAAAG,SAAAH,EAAAG,QAAA,QACK,MAAAC,KAHL,GAQAC,EAAAH,KAAAI,aAsGA,SAAAC,EAAAC,EAAAC,GACA,mBAAAA,OAAA/C,EAAA8C,EAAAC,GAKA,IArBAC,EAAAC,EAqBAC,EAAA7C,MAAA8C,UACAC,EAAAnB,SAAAkB,UACAE,EAAApD,OAAAkD,UAGAG,EAAAtB,EAAA,sBAGAuB,EAAAH,EAAAI,SAGAC,EAAAJ,EAAAI,eAGAC,EAAA,WACA,IAAAC,EAAA,SAAAC,KAAAN,KAAApD,MAAAoD,EAAApD,KAAA2D,UAAA,IACA,OAAAF,EAAA,iBAAAA,EAAA,GAFA,GAWAG,EAAAT,EAAAG,SAGAO,EAAAR,EAAAS,KAAA/D,QAGAgE,EAAAC,OAAA,IAAAX,EAAAS,KAAAP,GAAAU,QAtLA,sBAsLA,QAAAA,QAAA,uEAGAC,EAAA/B,EAAAL,EAAAoC,YAAApE,EACAqE,EAAArC,EAAAqC,OACAC,EAAAtC,EAAAsC,WACAC,EAAAH,IAAAG,iBAAAvE,EACAwE,GA3DAxB,EA2DA/C,OAAAwE,eA3DAxB,EA2DAhD,OA1DA,SAAAyE,GACA,OAAA1B,EAAAC,EAAAyB,MA0DAC,EAAA1E,OAAA2E,OACAC,EAAAxB,EAAAwB,qBACAC,EAAA5B,EAAA4B,OACAC,EAAAV,IAAAW,iBAAAhF,EAEAiF,EAAA,WACA,IACA,IAAAjC,EAAAkC,GAAAjF,OAAA,kBAEA,OADA+C,EAAA,GAAa,OACbA,EACK,MAAAN,KALL,GAUAyC,EAAAf,IAAAgB,cAAApF,EACAqF,EAAAC,KAAAC,IACAC,EAAAC,KAAAC,IAGAC,GAAAT,GAAAlD,EAAA,OACA4D,GAAAV,GAAAjF,OAAA,UAUA4F,GAAA,WACA,SAAA/C,KAEA,gBAAAgD,GACA,IAAAC,GAAAD,GACA,SAGA,GAAAnB,EACA,OAAAA,EAAAmB,GAGAhD,EAAAK,UAAA2C,EACA,IAAAE,EAAA,IAAAlD,EAEA,OADAA,EAAAK,eAAAnD,EACAgG,GAfA,GA2BA,SAAAC,GAAAC,GACA,IAAAC,GAAA,EACAvG,EAAA,MAAAsG,EAAA,EAAAA,EAAAtG,OAGA,IAFAwG,KAAAC,UAEAF,EAAAvG,GAAA,CACA,IAAA0G,EAAAJ,EAAAC,GACAC,KAAAG,IAAAD,EAAA,GAAAA,EAAA,KAsGA,SAAAE,GAAAN,GACA,IAAAC,GAAA,EACAvG,EAAA,MAAAsG,EAAA,EAAAA,EAAAtG,OAGA,IAFAwG,KAAAC,UAEAF,EAAAvG,GAAA,CACA,IAAA0G,EAAAJ,EAAAC,GACAC,KAAAG,IAAAD,EAAA,GAAAA,EAAA,KAoHA,SAAAG,GAAAP,GACA,IAAAC,GAAA,EACAvG,EAAA,MAAAsG,EAAA,EAAAA,EAAAtG,OAGA,IAFAwG,KAAAC,UAEAF,EAAAvG,GAAA,CACA,IAAA0G,EAAAJ,EAAAC,GACAC,KAAAG,IAAAD,EAAA,GAAAA,EAAA,KAkGA,SAAAI,GAAAR,GACA,IAAAS,EAAAP,KAAAQ,SAAA,IAAAJ,GAAAN,GACAE,KAAAS,KAAAF,EAAAE,KA2GA,SAAAC,GAAAzH,EAAA0H,GACA,IAAAC,EAAA1G,GAAAjB,GACA4H,GAAAD,GAAAE,GAAA7H,GACA8H,GAAAH,IAAAC,GAAA7B,GAAA/F,GACA+H,GAAAJ,IAAAC,IAAAE,GAAAvE,GAAAvD,GACAgI,EAAAL,GAAAC,GAAAE,GAAAC,EACApB,EAAAqB,EAzmBA,SAAAlI,EAAAmI,GAIA,IAHA,IAAAnB,GAAA,EACAH,EAAA3F,MAAAlB,KAEAgH,EAAAhH,GACA6G,EAAAG,GAAAmB,EAAAnB,GAGA,OAAAH,EAimBAuB,CAAAlI,EAAAO,OAAA4H,QAAA,GACA5H,EAAAoG,EAAApG,OAEA,QAAAmD,KAAA1D,GACA0H,IAAAtD,EAAAO,KAAA3E,EAAA0D,IAAAsE,IACA,UAAAtE,GACAoE,IAAA,UAAApE,GAAA,UAAAA,IACAqE,IAAA,UAAArE,GAAA,cAAAA,GAAA,cAAAA,IACA0E,GAAA1E,EAAAnD,KACAoG,EAAA0B,KAAA3E,GAIA,OAAAiD,EAaA,SAAA2B,GAAA7E,EAAAC,EAAA1D,SACAW,IAAAX,GAAAuI,GAAA9E,EAAAC,GAAA1D,WAAAW,IAAAX,GAAA0D,KAAAD,IACA+E,GAAA/E,EAAAC,EAAA1D,GAeA,SAAAyI,GAAAhF,EAAAC,EAAA1D,GACA,IAAA0I,EAAAjF,EAAAC,GAEAU,EAAAO,KAAAlB,EAAAC,IAAA6E,GAAAG,EAAA1I,UAAAW,IAAAX,GAAA0D,KAAAD,IACA+E,GAAA/E,EAAAC,EAAA1D,GAaA,SAAA2I,GAAAC,EAAAlF,GAGA,IAFA,IAAAnD,EAAAqI,EAAArI,OAEAA,KACA,GAAAgI,GAAAK,EAAArI,GAAA,GAAAmD,GACA,OAAAnD,EAIA,SAaA,SAAAiI,GAAA/E,EAAAC,EAAA1D,GACA,aAAA0D,GAAAkC,EACAA,EAAAnC,EAAAC,EAAA,CACAmF,cAAA,EACAC,YAAA,EACA9I,QACA+I,UAAA,IAGAtF,EAAAC,GAAA1D,EA/bA4G,GAAA9C,UAAAkD,MA7EA,WACAD,KAAAQ,SAAAhB,MAAA,SACAQ,KAAAS,KAAA,GA4EAZ,GAAA9C,UAAA,OA9DA,SAAAJ,GACA,IAAAiD,EAAAI,KAAAiC,IAAAtF,WAAAqD,KAAAQ,SAAA7D,GAEA,OADAqD,KAAAS,MAAAb,EAAA,IACAA,GA4DAC,GAAA9C,UAAAmF,IA/CA,SAAAvF,GACA,IAAA4D,EAAAP,KAAAQ,SAEA,GAAAhB,GAAA,CACA,IAAAI,EAAAW,EAAA5D,GACA,OAAAiD,IAAAjF,OAAAf,EAAAgG,EAGA,OAAAvC,EAAAO,KAAA2C,EAAA5D,GAAA4D,EAAA5D,QAAA/C,GAwCAiG,GAAA9C,UAAAkF,IA3BA,SAAAtF,GACA,IAAA4D,EAAAP,KAAAQ,SACA,OAAAhB,QAAA5F,IAAA2G,EAAA5D,GAAAU,EAAAO,KAAA2C,EAAA5D,IA0BAkD,GAAA9C,UAAAoD,IAZA,SAAAxD,EAAA1D,GACA,IAAAsH,EAAAP,KAAAQ,SAGA,OAFAR,KAAAS,MAAAT,KAAAiC,IAAAtF,GAAA,IACA4D,EAAA5D,GAAA6C,SAAA5F,IAAAX,EAAA0B,EAAA1B,EACA+G,MA+HAI,GAAArD,UAAAkD,MA3FA,WACAD,KAAAQ,SAAA,GACAR,KAAAS,KAAA,GA0FAL,GAAArD,UAAA,OA7EA,SAAAJ,GACA,IAAA4D,EAAAP,KAAAQ,SACAT,EAAA6B,GAAArB,EAAA5D,GAEA,QAAAoD,EAAA,KAMAA,GAFAQ,EAAA/G,OAAA,EAGA+G,EAAA4B,MAEAzD,EAAAd,KAAA2C,EAAAR,EAAA,KAGAC,KAAAS,MACA,IA6DAL,GAAArD,UAAAmF,IAhDA,SAAAvF,GACA,IAAA4D,EAAAP,KAAAQ,SACAT,EAAA6B,GAAArB,EAAA5D,GACA,OAAAoD,EAAA,OAAAnG,EAAA2G,EAAAR,GAAA,IA8CAK,GAAArD,UAAAkF,IAjCA,SAAAtF,GACA,OAAAiF,GAAA5B,KAAAQ,SAAA7D,IAAA,GAiCAyD,GAAArD,UAAAoD,IAnBA,SAAAxD,EAAA1D,GACA,IAAAsH,EAAAP,KAAAQ,SACAT,EAAA6B,GAAArB,EAAA5D,GASA,OAPAoD,EAAA,KACAC,KAAAS,KACAF,EAAAe,KAAA,CAAA3E,EAAA1D,KAEAsH,EAAAR,GAAA,GAAA9G,EAGA+G,MA6GAK,GAAAtD,UAAAkD,MAzEA,WACAD,KAAAS,KAAA,EACAT,KAAAQ,SAAA,CACA4B,KAAA,IAAAvC,GACAwC,IAAA,IAAA9C,IAAAa,IACAkC,OAAA,IAAAzC,KAqEAQ,GAAAtD,UAAA,OAvDA,SAAAJ,GACA,IAAAiD,EAAA2C,GAAAvC,KAAArD,GAAA,OAAAA,GAEA,OADAqD,KAAAS,MAAAb,EAAA,IACAA,GAqDAS,GAAAtD,UAAAmF,IAxCA,SAAAvF,GACA,OAAA4F,GAAAvC,KAAArD,GAAAuF,IAAAvF,IAwCA0D,GAAAtD,UAAAkF,IA3BA,SAAAtF,GACA,OAAA4F,GAAAvC,KAAArD,GAAAsF,IAAAtF,IA2BA0D,GAAAtD,UAAAoD,IAbA,SAAAxD,EAAA1D,GACA,IAAAsH,EAAAgC,GAAAvC,KAAArD,GACA8D,EAAAF,EAAAE,KAGA,OAFAF,EAAAJ,IAAAxD,EAAA1D,GACA+G,KAAAS,MAAAF,EAAAE,QAAA,IACAT,MAgHAM,GAAAvD,UAAAkD,MAlFA,WACAD,KAAAQ,SAAA,IAAAJ,GACAJ,KAAAS,KAAA,GAiFAH,GAAAvD,UAAA,OApEA,SAAAJ,GACA,IAAA4D,EAAAP,KAAAQ,SACAZ,EAAAW,EAAA,OAAA5D,GAEA,OADAqD,KAAAS,KAAAF,EAAAE,KACAb,GAiEAU,GAAAvD,UAAAmF,IApDA,SAAAvF,GACA,OAAAqD,KAAAQ,SAAA0B,IAAAvF,IAoDA2D,GAAAvD,UAAAkF,IAvCA,SAAAtF,GACA,OAAAqD,KAAAQ,SAAAyB,IAAAtF,IAuCA2D,GAAAvD,UAAAoD,IAzBA,SAAAxD,EAAA1D,GACA,IAAAsH,EAAAP,KAAAQ,SAEA,GAAAD,aAAAH,GAAA,CACA,IAAAoC,EAAAjC,EAAAC,SAEA,IAAAjB,IAAAiD,EAAAhJ,OAAAkB,EAAA,EAGA,OAFA8H,EAAAlB,KAAA,CAAA3E,EAAA1D,IACA+G,KAAAS,OAAAF,EAAAE,KACAT,KAGAO,EAAAP,KAAAQ,SAAA,IAAAH,GAAAmC,GAKA,OAFAjC,EAAAJ,IAAAxD,EAAA1D,GACA+G,KAAAS,KAAAF,EAAAE,KACAT,MAmIA,IA8WAyC,GA9WAC,GA+WA,SAAAhG,EAAAwE,EAAAyB,GAMA,IALA,IAAA5C,GAAA,EACA6C,EAAA/I,OAAA6C,GACAmG,EAAAF,EAAAjG,GACAlD,EAAAqJ,EAAArJ,OAEAA,KAAA,CACA,IAAAmD,EAAAkG,EAAAJ,GAAAjJ,IAAAuG,GAEA,QAAAmB,EAAA0B,EAAAjG,KAAAiG,GACA,MAIA,OAAAlG,GApXA,SAAAoG,GAAA7J,GACA,aAAAA,OACAW,IAAAX,EAAAqC,EAAAH,EAGAwD,QAAA9E,OAAAZ,GAuZA,SAAAA,GACA,IAAA8J,EAAA1F,EAAAO,KAAA3E,EAAA0F,GACAqE,EAAA/J,EAAA0F,GAEA,IACA1F,EAAA0F,QAAA/E,EACK,MAAA0C,IAEL,IAAAsD,EAAAlC,EAAAE,KAAA3E,GAEA8J,EACA9J,EAAA0F,GAAAqE,SAEA/J,EAAA0F,GAGA,OAAAiB,EAvaAqD,CAAAhK,GAmiBA,SAAAA,GACA,OAAAyE,EAAAE,KAAA3E,GApiBAiK,CAAAjK,GAWA,SAAAkK,GAAAlK,GACA,OAAAmK,GAAAnK,IAAA6J,GAAA7J,IAAA8B,EAYA,SAAAsI,GAAApK,GACA,SAAA0G,GAAA1G,KA0dA2D,EA1dA3D,EA2dAqE,QAAAV,MAvdA0G,GAAArK,GAAA4E,EAAAtC,GACApC,KA2lBA,SAAAyD,GACA,SAAAA,EAAA,CACA,IACA,OAAAO,EAAAS,KAAAhB,GACO,MAAAN,IAEP,IACA,OAAAM,EAAA,GACO,MAAAN,KAGP,SAtmBAiH,CAAAtK,IAqdA,IAAA2D,EA9bA,SAAA4G,GAAA9G,GACA,IAAAiD,GAAAjD,GACA,OAwdA,SAAAA,GACA,IAAAkD,EAAA,GAEA,SAAAlD,EACA,QAAAC,KAAA9C,OAAA6C,GACAkD,EAAA0B,KAAA3E,GAIA,OAAAiD,EAjeA6D,CAAA/G,GAGA,IAAAgH,EAAAC,GAAAjH,GACAkD,EAAA,GAEA,QAAAjD,KAAAD,GACA,eAAAC,IAAA+G,GAAArG,EAAAO,KAAAlB,EAAAC,KACAiD,EAAA0B,KAAA3E,GAIA,OAAAiD,EAeA,SAAAgE,GAAAlH,EAAAmH,EAAAC,EAAAC,EAAAC,GACAtH,IAAAmH,GAIAnB,GAAAmB,EAAA,SAAAI,EAAAtH,GACA,GAAAgD,GAAAsE,GACAD,MAAA,IAAA1D,IA8BA,SAAA5D,EAAAmH,EAAAlH,EAAAmH,EAAAI,EAAAH,EAAAC,GACA,IAAArC,EAAAlF,EAAAC,EAAAC,GACAsH,EAAAxH,EAAAoH,EAAAlH,GACAwH,EAAAH,EAAA9B,IAAA+B,GAEA,GAAAE,EAEA,YADA5C,GAAA7E,EAAAC,EAAAwH,GAIA,IAAAC,EAAAL,IAAApC,EAAAsC,EAAAtH,EAAA,GAAAD,EAAAmH,EAAAG,QAAApK,EACAyK,OAAAzK,IAAAwK,EAEA,GAAAC,EAAA,CACA,IAAAzD,EAAA1G,GAAA+J,GACAlD,GAAAH,GAAA5B,GAAAiF,GACAK,GAAA1D,IAAAG,GAAAvE,GAAAyH,GACAG,EAAAH,EAEArD,GAAAG,GAAAuD,EACApK,GAAAyH,GACAyC,EAAAzC,EA0oBAyB,GADAnK,EAxoBS0I,IAyoBT4C,GAAAtL,GAxoBAmL,EAwHA,SAAAP,EAAAhC,GACA,IAAA9B,GAAA,EACAvG,EAAAqK,EAAArK,OACAqI,MAAA5H,MAAAT,IAEA,OAAAuG,EAAAvG,GACAqI,EAAA9B,GAAA8D,EAAA9D,GAGA,OAAA8B,EAjIA2C,CAAA7C,GACSZ,GACTsD,GAAA,EACAD,EAqEA,SAAAK,EAAAC,GACA,GAAAA,EACA,OAAAD,EAAAE,QAGA,IAAAnL,EAAAiL,EAAAjL,OACAoG,EAAAzB,IAAA3E,GAAA,IAAAiL,EAAAG,YAAApL,GAEA,OADAiL,EAAAI,KAAAjF,GACAA,EA7EAkF,CAAAb,GAAA,IACSK,GACTD,GAAA,EACAD,EAoGA,SAAAW,EAAAL,GACA,IAAAD,EAAAC,EAhBA,SAAAM,GACA,IAAApF,EAAA,IAAAoF,EAAAJ,YAAAI,EAAAC,YAEA,OADA,IAAA/G,EAAA0B,GAAAO,IAAA,IAAAjC,EAAA8G,IACApF,EAaAsF,CAAAH,EAAAN,QAAAM,EAAAN,OACA,WAAAM,EAAAH,YAAAH,EAAAM,EAAAI,WAAAJ,EAAAvL,QAtGA4L,CAAAnB,GAAA,IAEAG,EAAA,GA2yBA,SAAAnL,GACA,IAAAmK,GAAAnK,IAAA6J,GAAA7J,IAAAmC,EACA,SAGA,IAAAsE,EAAAtB,EAAAnF,GAEA,UAAAyG,EACA,SAGA,IAAA2F,EAAAhI,EAAAO,KAAA8B,EAAA,gBAAAA,EAAAkF,YACA,yBAAAS,mBAAAlI,EAAAS,KAAAyH,IAAA1H,EArzBO2H,CAAArB,IAAAnD,GAAAmD,IACPG,EAAAzC,EAEAb,GAAAa,GACAyC,EAg2BA,SAAAnL,GACA,OAhuBA,SAAA4K,EAAAhB,EAAAnG,EAAAqH,GACA,IAAAwB,GAAA7I,EACAA,MAAA,IACA,IAAAqD,GAAA,EACAvG,EAAAqJ,EAAArJ,OAEA,OAAAuG,EAAAvG,GAAA,CACA,IAAAmD,EAAAkG,EAAA9C,GACAqE,EAAAL,IAAArH,EAAAC,GAAAkH,EAAAlH,KAAAD,EAAAmH,QAAAjK,OAEAA,IAAAwK,IACAA,EAAAP,EAAAlH,IAGA4I,EACA9D,GAAA/E,EAAAC,EAAAyH,GAEA1C,GAAAhF,EAAAC,EAAAyH,GAIA,OAAA1H,EA2sBA8I,CAAAvM,EAAAwM,GAAAxM,IAj2BAyM,CAAA/D,KACShC,GAAAgC,IAAAmC,GAAAR,GAAA3B,MACTyC,EAoRA,SAAA1H,GACA,yBAAAA,EAAAkI,aAAAjB,GAAAjH,GAAA,GAAA+C,GAAArB,EAAA1B,IArRAiJ,CAAA1B,KAGAI,GAAA,EAonBA,IAAApL,EAhnBAoL,IAEAL,EAAA7D,IAAA8D,EAAAG,GACAF,EAAAE,EAAAH,EAAAH,EAAAC,EAAAC,GACAA,EAAA,OAAAC,IAGA1C,GAAA7E,EAAAC,EAAAyH,GAlFAwB,CAAAlJ,EAAAmH,EAAAlH,EAAAmH,EAAAF,GAAAG,EAAAC,OACO,CACP,IAAAI,EAAAL,IAAAtH,EAAAC,EAAAC,GAAAsH,EAAAtH,EAAA,GAAAD,EAAAmH,EAAAG,QAAApK,OAEAA,IAAAwK,IACAA,EAAAH,GAGA1C,GAAA7E,EAAAC,EAAAyH,KAEKqB,IAoFL,SAAAI,GAAAjJ,EAAAkJ,GACA,OAAAC,GAwXA,SAAAnJ,EAAAkJ,EAAAjJ,GAEA,OADAiJ,EAAA7G,OAAArF,IAAAkM,EAAAlJ,EAAApD,OAAA,EAAAsM,EAAA,GACA,WAMA,IALA,IAAAE,EAAArM,UACAoG,GAAA,EACAvG,EAAAyF,EAAA+G,EAAAxM,OAAAsM,EAAA,GACAjE,EAAA5H,MAAAT,KAEAuG,EAAAvG,GACAqI,EAAA9B,GAAAiG,EAAAF,EAAA/F,GAGAA,GAAA,EAGA,IAFA,IAAAkG,EAAAhM,MAAA6L,EAAA,KAEA/F,EAAA+F,GACAG,EAAAlG,GAAAiG,EAAAjG,GAIA,OADAkG,EAAAH,GAAAjJ,EAAAgF,GAl0CA,SAAAjF,EAAAsJ,EAAAF,GACA,OAAAA,EAAAxM,QACA,OACA,OAAAoD,EAAAgB,KAAAsI,GAEA,OACA,OAAAtJ,EAAAgB,KAAAsI,EAAAF,EAAA,IAEA,OACA,OAAApJ,EAAAgB,KAAAsI,EAAAF,EAAA,GAAAA,EAAA,IAEA,OACA,OAAApJ,EAAAgB,KAAAsI,EAAAF,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAGA,OAAApJ,EAAAuJ,MAAAD,EAAAF,GAozCAG,CAAAvJ,EAAAoD,KAAAiG,IA5YAG,CAAAxJ,EAAAkJ,EAAAO,IAAAzJ,EAAA,IAmMA,SAAA2F,GAAAF,EAAA1F,GACA,IAAA4D,EAAA8B,EAAA7B,SACA,OAwGA,SAAAvH,GACA,IAAAqN,SAAArN,EACA,gBAAAqN,GAAA,UAAAA,GAAA,UAAAA,GAAA,WAAAA,EAAA,cAAArN,EAAA,OAAAA,EA1GAsN,CAAA5J,GAAA4D,EAAA,iBAAA5D,EAAA,iBAAA4D,EAAA8B,IAYA,SAAAvD,GAAApC,EAAAC,GACA,IAAA1D,EA3kCA,SAAAyD,EAAAC,GACA,aAAAD,OAAA9C,EAAA8C,EAAAC,GA0kCA6J,CAAA9J,EAAAC,GACA,OAAA0G,GAAApK,UAAAW,EAmDA,SAAAyH,GAAApI,EAAAO,GACA,IAAA8M,SAAArN,EAEA,SADAO,EAAA,MAAAA,EAAAsB,EAAAtB,KACA,UAAA8M,GAAA,UAAAA,GAAA9K,EAAArC,KAAAF,QAAA,GAAAA,EAAA,MAAAA,EAAAO,EA6DA,SAAAmK,GAAA1K,GACA,IAAAoM,EAAApM,KAAA2L,YAEA,OAAA3L,KADA,mBAAAoM,KAAAtI,WAAAE,GAiFA,IAAA8I,GAWA,SAAAnJ,GACA,IAAA6J,EAAA,EACAC,EAAA,EACA,kBACA,IAAAC,EAAAvH,IACAwH,EAAA/L,GAAA8L,EAAAD,GAGA,GAFAA,EAAAC,EAEAC,EAAA,GACA,KAAAH,GAAA7L,EACA,OAAAjB,UAAA,QAGA8M,EAAA,EAGA,OAAA7J,EAAAuJ,WAAAvM,EAAAD,YA3BAkN,CA7YAhI,EAAA,SAAAjC,EAAA0F,GACA,OAAAzD,EAAAjC,EAAA,YACAkF,cAAA,EACAC,YAAA,EACA9I,OA04BAA,EA14BAqJ,EA24BA,WACA,OAAArJ,IA34BA+I,UAAA,IAy4BA,IAAA/I,GA94BAoN,IAmeA,SAAA7E,GAAAvI,EAAA6N,GACA,OAAA7N,IAAA6N,GAAA7N,OAAA6N,MAsBA,IAAAhG,GAAAqC,GAAA,WACA,OAAAxJ,UADA,IAEGwJ,GAAA,SAAAlK,GACH,OAAAmK,GAAAnK,IAAAoE,EAAAO,KAAA3E,EAAA,YAAAwF,EAAAb,KAAA3E,EAAA,WA0BAiB,GAAAD,MAAAC,QA2BA,SAAAqK,GAAAtL,GACA,aAAAA,GAAA8N,GAAA9N,EAAAO,UAAA8J,GAAArK,GAmDA,IAAA+F,GAAAD,GAiVA,WACA,UA/TA,SAAAuE,GAAArK,GACA,IAAA0G,GAAA1G,GACA,SAKA,IAAA+J,EAAAF,GAAA7J,GACA,OAAA+J,GAAA/H,GAAA+H,GAAA9H,GAAA8H,GAAAhI,GAAAgI,GAAA3H,EA8BA,SAAA0L,GAAA9N,GACA,uBAAAA,MAAA,GAAAA,EAAA,MAAAA,GAAA6B,EA6BA,SAAA6E,GAAA1G,GACA,IAAAqN,SAAArN,EACA,aAAAA,IAAA,UAAAqN,GAAA,YAAAA,GA4BA,SAAAlD,GAAAnK,GACA,aAAAA,GAAA,iBAAAA,EAiEA,IAAAuD,GAAAD,EAjrDA,SAAAK,GACA,gBAAA3D,GACA,OAAA2D,EAAA3D,IA+qDA+N,CAAAzK,GAz7BA,SAAAtD,GACA,OAAAmK,GAAAnK,IAAA8N,GAAA9N,EAAAO,WAAAiC,EAAAqH,GAAA7J,KA8+BA,SAAAwM,GAAA/I,GACA,OAAA6H,GAAA7H,GAAAgE,GAAAhE,GAAA,GAAA8G,GAAA9G,GAmCA,IA/vBAuK,GA+vBAC,IA/vBAD,GA+vBA,SAAAvK,EAAAmH,EAAAC,EAAAC,GACAH,GAAAlH,EAAAmH,EAAAC,EAAAC,IA/vBA8B,GAAA,SAAAnJ,EAAAyK,GACA,IAAApH,GAAA,EACAvG,EAAA2N,EAAA3N,OACAuK,EAAAvK,EAAA,EAAA2N,EAAA3N,EAAA,QAAAI,EACAwN,EAAA5N,EAAA,EAAA2N,EAAA,QAAAvN,EAUA,IATAmK,EAAAkD,GAAAzN,OAAA,sBAAAuK,GAAAvK,IAAAuK,QAAAnK,EAEAwN,GA2IA,SAAAnO,EAAA8G,EAAArD,GACA,IAAAiD,GAAAjD,GACA,SAGA,IAAA4J,SAAAvG,EAEA,mBAAAuG,EAAA/B,GAAA7H,IAAA2E,GAAAtB,EAAArD,EAAAlD,QAAA,UAAA8M,GAAAvG,KAAArD,IACA8E,GAAA9E,EAAAqD,GAAA9G,GAnJAoO,CAAAF,EAAA,GAAAA,EAAA,GAAAC,KACArD,EAAAvK,EAAA,OAAAI,EAAAmK,EACAvK,EAAA,GAGAkD,EAAA7C,OAAA6C,KAEAqD,EAAAvG,GAAA,CACA,IAAAqK,EAAAsD,EAAApH,GAEA8D,GACAoD,GAAAvK,EAAAmH,EAAA9D,EAAAgE,GAIA,OAAArH,KAsxBA,SAAA2J,GAAApN,GACA,OAAAA,EAqBAsB,EAAAE,QAAAyM,GAl/DGI,CAFH/M,EAAA,CACAE,QAAA,IACGF,EAAAE,SAAAF,EAAAE,SAs/DH9B,EAAA,SAAA4O,GACA,IAAAC,EAAAD,EAAAC,SACAC,EAAAF,EAAAE,MAEA,OADAF,EAAAG,UACA,IAAAD,GAAuC3O,EAAA6O,EAAKC,cAAA,QAC5CC,UAAA,oBACGL,IAGH3I,EAAA,SAAAiJ,EAAAnL,EAAA1D,GAYA,OAXA0D,KAAAmL,EACAjO,OAAAgF,eAAAiJ,EAAAnL,EAAA,CACA1D,QACA8I,YAAA,EACAD,cAAA,EACAE,UAAA,IAGA8F,EAAAnL,GAAA1D,EAGA6O,GAGAC,EAAAlO,OAAAmO,QAAA,SAAAC,GACA,QAAAC,EAAA,EAAiBA,EAAAvO,UAAAH,OAAsB0O,IAAA,CACvC,IAAArE,EAAAlK,UAAAuO,GAEA,QAAAvL,KAAAkH,EACAhK,OAAAkD,UAAAM,eAAAO,KAAAiG,EAAAlH,KACAsL,EAAAtL,GAAAkH,EAAAlH,IAKA,OAAAsL,GAGAE,EAAA,WA2BA,gBAAAC,EAAAF,GACA,GAAAjO,MAAAC,QAAAkO,GACA,OAAAA,EACK,GAAAnK,OAAAoK,YAAAxO,OAAAuO,GACL,OA9BA,SAAAA,EAAAF,GACA,IAAAI,EAAA,GACAC,GAAA,EACAC,GAAA,EACAC,OAAA7O,EAEA,IACA,QAAA8O,EAAAC,EAAAP,EAAAnK,OAAAoK,cAA+CE,GAAAG,EAAAC,EAAAC,QAAAC,QAC/CP,EAAAhH,KAAAoH,EAAAzP,QAEAiP,GAAAI,EAAA9O,SAAA0O,GAH8EK,GAAA,IAKzE,MAAAO,GACLN,GAAA,EACAC,EAAAK,EACK,QACL,KACAP,GAAAI,EAAA,QAAAA,EAAA,SACO,QACP,GAAAH,EAAA,MAAAC,GAIA,OAAAH,EAOAS,CAAAX,EAAAF,GAEA,UAAAc,UAAA,yDAjCA,GAwCAC,EAAA,CACAC,UAAA,EACAC,kBAAA,GACAC,gBAAA,IAGA1Q,EAAA,SAAA6O,GACA,IAAAC,EAAAD,EAAAC,SACAK,EAAAN,EAAAM,UACAwB,EAAA9B,EAAA8B,GACAC,EAAA/B,EAAA+B,KACAC,EAAAhC,EAAAgC,SACAC,EAAAjC,EAAAkC,SACAA,OAAA7P,IAAA4P,EAAA,GAAiDA,EAKjDE,EAAA,GAEAC,EAAkB9P,OAAAhB,EAAA,SAAAgB,CAAQ,IAC1B+P,EAAAzB,EAAAwB,EAAA,GACAE,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAEAG,EAAmBlQ,OAAAhB,EAAA,SAAAgB,CAAQ4P,GAC3BO,EAAA7B,EAAA4B,EAAA,GACAE,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAEAG,EAAgBtQ,OAAAhB,EAAA,OAAAgB,CAAM,MACtBuQ,EAoBA,SAAAC,IACA,IAAAC,EAAA3Q,UAAAH,OAAA,QAAAI,IAAAD,UAAA,GAAAA,UAAA,MACA,OAAWb,EAAA6O,EAAK4C,SAAAlI,IAAAiI,EAAA,SAAAE,EAAA7N,GAChB,IAAA6N,MAAA3H,MACA,OAAA2H,EAGA,IAAAhD,EAAAgD,EAAA3H,MAAA2E,SACAlB,EAAAkE,EAAAlE,KACAmE,EAAAJ,EAAA7C,GACAkD,EAAAD,EAAAjR,OAAA,EACAmR,EAAA,8BAAAC,SAAAtE,GACAuE,EAAAvE,IAAA3N,EAEA,OAAAgS,EAWA,SAAAH,EAAA7N,GA2BA,IAAA2M,EAAAkB,EAAA3H,MAAAyG,KACAhD,EA3BA,SAAAkE,GACA,IAAAM,EAAAN,EAAA3H,MAAAiI,SACAC,EAAA,WAAAP,EAAAlE,KACA0E,EAAA,SAAAR,EAAAlE,KAEA,OAAAyE,GAAAD,EACA,kBACSE,GAAAF,EACT,gBAEAN,EAAA3H,MAAAyD,MAAAkE,EAAAlE,KAiBA2E,CAAAT,GACAvR,EAdA,SAAAuR,EAAAlB,EAAAhD,GACA,IAAArN,EAAAgR,EAAAX,IAAAkB,EAAA3H,MAAA5J,OAAAgQ,EAAA3C,IAAA,GAEA,gBAAAA,EACAkE,EAAA3H,MAAA5J,MACS,SAAAqN,EAAA4E,OAAA,UACT,EAEAjS,EAMAkS,CAAAX,EAAAlB,EAAAhD,GAOAuB,EADAgC,EAAAP,KAAA,IAAAO,EAAAP,GAAA5B,SACA0D,EAAA9B,GAAAkB,EAAA3H,MAAAgF,UAAA,iBAAA2C,EAAA3H,MAAAgF,UACA,iCAAA+C,SAAAtE,GAAAkE,EAAgE3Q,OAAAhB,EAAA,aAAAgB,CAAY2Q,EAAA,CAC5E7N,MACAkL,YACA5O,QACAoS,SAVA,SAAA/O,GACA,OAAAgP,EAAAhP,EAAAkO,EAAA3H,MAAAwI,aA1CAE,CAAAf,EAAA7N,GACOkO,EAsDP,SAAAL,EAAA7N,GACA,IAAA6O,EAAAhB,EAAA3H,MAAA2I,cACAC,EAAA1R,EAAAyQ,EAAA3H,MAAA4I,SACAxS,EAAAwS,EAAApJ,IAAA,SAAAiH,GACA,OAAAW,EAAAX,IAAA,KAEA5B,IAAA8D,EAAArF,MAAA,KAAAlN,GACAwO,EAAAgE,EAAAC,OAAA,SAAAC,EAAArC,GACAI,EAAAJ,GAAAI,EAAAJ,IAAA,GACA,IAAAsC,EAAAC,EAAAhC,EAAAP,GAAAI,EAAAJ,IACAwC,EAAA,IAAAjS,OAAAC,KAAA8R,GAAApS,OACAuS,EAAArE,QAAA9N,IAAAgS,EAAAlE,QACAsE,GAAAtE,IAAA,IAAAkE,EAAAlE,QAUA,OARAoE,GAAAF,EAAAK,YACAvC,EAAAJ,GAAA2C,WAAA,IAGAD,GAAAD,KACArC,EAAAJ,GAAA5B,WAGAiE,IAAA,IAAAC,EAAAnE,QACO,GAOP,OALAiC,EAAA3B,EAAA,GAA+B2B,EAAA+B,EAAAC,OAAA,SAAAQ,EAAA5C,GAC/B,OAAAvB,EAAA,GAA0BmE,EAAArN,EAAA,GAAwByK,EAAA8B,EAAA9B,KAAA7B,EAAAiC,EAAAJ,GAAAvB,EAAA,GAAiE2B,EAAAJ,GAAA,CACnH7B,aAEO,KACM5N,OAAAhB,EAAA,aAAAgB,CAAY2Q,EAAA,CACzB7N,MACA1D,QACAwO,QACAC,YAvFAyE,CAAA3B,EAAA7N,GACO+N,EACQ7Q,OAAAhB,EAAA,aAAAgB,CAAY2Q,EAAA,GAAOC,GAElCD,IAzCAH,CAAA7C,GAUA,OATA3N,OAAAuS,OAAA1C,GAAA2C,OAAA,SAAAC,GACA,OAAAzS,OAAAC,KAAAwS,GAAA9S,OAAA,IACGA,OAAA,GAGHsQ,EAAA+B,EAAAhC,EAAAH,IAGE7P,OAAAhB,EAAA,UAAAgB,CA+LF,WACA0S,EAAA,eAAA3S,IAhMW,CAAAqQ,IACFnR,EAAA6O,EAAKC,cAAA,QACdC,YACAwB,KACAC,OACAkD,IAAArC,EACAZ,SAwHA,SAAAjN,GACAA,EAAAmQ,iBA2EK,IAFL5S,OAAAuS,OAAAvC,GAAAwC,OAAA,SAAAC,GACA,OAAAA,EAAAL,YAAAK,EAAA5E,UACKlO,OA1EL+P,EAAAjN,EAAA2N,EAAAyC,GA4DAH,EAAA,cArLGnC,GAiHH,SAAAyB,EAAAc,EAAAC,GACA,OAAApS,EAAAmS,EAAAC,EAAA,SAAAC,EAAAC,EAAAC,GACA,kBAAAA,EAAAF,GAAAC,OAAAlT,IASA,SAAA0R,EAAAhP,GACA,IAAA+O,EAAA1R,UAAAH,OAAA,GAAAG,UAAA,KAAAC,UAAAD,UAAA,gBACAqT,EAAA1Q,EAAA2L,OACAqB,EAAA0D,EAAA1D,KACArQ,EAAA+T,EAAA/T,MACAgU,EAAAD,EAAAC,QACAC,EAAAF,EAAAE,QACAC,EAAAH,EAAAG,MACA7G,EAAA0G,EAAA1G,KAEA,GAAAA,IAAA,YACArN,EAAAgU,OACK,GAAA3G,IAAA,UAAAA,IAAA,mBACLrN,EAAAgB,MAAAmT,KAAAF,GAAAb,OAAA,SAAAgB,GACA,OAAAA,EAAAC,WACOjL,IAAA,SAAAgL,GACP,OAAAA,EAAApU,aAEK,GAAAqN,IAAA,QAAAA,IAAA,iBACLrN,EAAAkU,EAGA,IAAA/B,EAAA9B,GAAA,CACAiE,EAAAjE,EAAA,CACA7B,MAAA,OAIA+F,EAAAlE,EAAArQ,GACAoS,EAAA/O,GAGA,SAAAoQ,IACAvC,EAAAsD,QAAAC,QACA5D,EAAA,IACAI,EAAA,IAGA,SAAAqD,EAAAjE,EAAAqE,GACA7D,EAAAtP,EAAAqP,EAAAhL,EAAA,GAAsDyK,EAAAqE,KAGtD,SAAAH,EAAAlE,EAAAtP,GACAkQ,EAAAnC,EAAA,GAA2BkC,EAAApL,EAAA,GAAyByK,EAAAtP,KAGpD,SAAAuS,EAAA5P,EAAA3C,GACA8P,EAAAjQ,OAAAiG,QAAA+J,GAAA6B,OAAA,SAAAQ,EAAA0B,GACA,IAAAC,EAAA1F,EAAAyF,EAAA,GACAtE,EAAAuE,EAAA,GACAC,EAAAD,EAAA,GAEA,OAAA9F,EAAA,GAAwBmE,EAAArN,EAAA,GAAwByK,EAAAvB,EAAA,GAAmB+F,EAAAjP,EAAA,GAAiClC,EAAA3C,OAC/F,KAWL,SAAAoR,EAAA9B,GACA,OAAAI,EAAAJ,IAAAI,EAAAJ,GAAA7B,OAAAoC,EAAAP,IAAAO,EAAAP,GAAA7B,6KC1xEesG,EAvDM,WACnB,OACEC,EAAArG,EAAAC,cAACqG,EAAA,EAAD,CAAe1E,SAAU,SAACjN,EAAGmN,GAAJ,OAAiByE,QAAQC,IAAI1E,KACpDuE,EAAArG,EAAAC,cAAA,SAAOwG,QAAQ,iBAAf,SACAJ,EAAArG,EAAAC,cAAA,SAAOtB,KAAK,OAAOgD,KAAK,OAAOD,GAAG,kBAElC2E,EAAArG,EAAAC,cAAA,SAAOwG,QAAQ,kBAAf,UACAJ,EAAArG,EAAAC,cAACqG,EAAA,EAAD,CAAWxC,QAAQ,QAAQD,cAAe5S,IAAWc,UAArD,qBAGAsU,EAAArG,EAAAC,cAACqG,EAAA,EAAD,CAAWxC,QAAQ,QAAQD,cAAe5S,IAAWQ,OAArD,sCAGA4U,EAAArG,EAAAC,cAAA,SAAOtB,KAAK,QAAQgD,KAAK,QAAQD,GAAG,mBAEpC2E,EAAArG,EAAAC,cAAA,SAAOwG,QAAQ,kBAAf,cACAJ,EAAArG,EAAAC,cAACqG,EAAA,EAAD,CAAWxC,QAAQ,QAAQD,cAAe5S,IAAWI,OAArD,qCAGAgV,EAAArG,EAAAC,cAAA,SAAOtB,KAAK,MAAMgD,KAAK,QAAQD,GAAG,mBAElC2E,EAAArG,EAAAC,cAAA,SAAOwG,QAAQ,qBAAf,aACAJ,EAAArG,EAAAC,cAACqG,EAAA,EAAD,CAAWxC,QAAQ,WAAWD,cAAe5S,IAAWa,UAAU,KAAlE,2CAGAuU,EAAArG,EAAAC,cAAA,YAAU0B,KAAK,WAAWD,GAAG,sBAE7B2E,EAAArG,EAAAC,cAACqG,EAAA,EAAD,CAAWxC,QAAQ,eAAeD,cAAe5S,IAAWc,UAA5D,aAGAsU,EAAArG,EAAAC,cAAA,SAAOtB,KAAK,QAAQgD,KAAK,eAAerQ,MAAM,UAAUoQ,GAAG,2BAC3D2E,EAAArG,EAAAC,cAAA,SAAOwG,QAAQ,0BAAf,WACAJ,EAAArG,EAAAC,cAAA,SAAOtB,KAAK,QAAQgD,KAAK,eAAerQ,MAAM,UAAUoQ,GAAG,2BAC3D2E,EAAArG,EAAAC,cAAA,SAAOwG,QAAQ,0BAAf,WACAJ,EAAArG,EAAAC,cAAA,SAAOtB,KAAK,QAAQgD,KAAK,eAAerQ,MAAM,UAAUoQ,GAAG,2BAC3D2E,EAAArG,EAAAC,cAAA,SAAOwG,QAAQ,0BAAf,WAEAJ,EAAArG,EAAAC,cAAA,WACAoG,EAAArG,EAAAC,cAACqG,EAAA,EAAD,CACExC,QAAS,CAAC,YAAa,YAAa,aACpCD,cAAe,SAAC6C,EAAKC,EAAKC,GAAU,OAAOF,GAAOC,GAAOC,IAF3D,aAKAP,EAAArG,EAAAC,cAAA,SAAOtB,KAAK,WAAWgD,KAAK,YAAYD,GAAG,uBAC3C2E,EAAArG,EAAAC,cAAA,SAAOwG,QAAQ,sBAAf,WACAJ,EAAArG,EAAAC,cAAA,SAAOtB,KAAK,WAAWgD,KAAK,YAAYD,GAAG,uBAC3C2E,EAAArG,EAAAC,cAAA,SAAOwG,QAAQ,sBAAf,WACAJ,EAAArG,EAAAC,cAAA,SAAOtB,KAAK,WAAWgD,KAAK,YAAYD,GAAG,uBAC3C2E,EAAArG,EAAAC,cAAA,SAAOwG,QAAQ,sBAAf,WAEAJ,EAAArG,EAAAC,cAAA,SAAOtB,KAAK,SAASrN,MAAM,qCCnClBuV,EAfS,WACtB,OACER,EAAArG,EAAAC,cAACqG,EAAA,EAAD,CAAe1E,SAAU,SAACjN,EAAGmN,GAAJ,OAAiByE,QAAQC,IAAI1E,KAEpDuE,EAAArG,EAAAC,cAAA,SAAOwG,QAAQ,mBAAf,wBACAJ,EAAArG,EAAAC,cAACqG,EAAA,EAAD,CAAWxC,QAAQ,SAASD,cAAe,SAAAxR,GAAG,MAAY,gBAARA,IAAlD,+BAGAgU,EAAArG,EAAAC,cAAA,SAAOtB,KAAK,OAAOgD,KAAK,SAASD,GAAG,oBAEpC2E,EAAArG,EAAAC,cAAA,SAAOtB,KAAK,SAASrN,MAAM,qCCiBlBwV,EA3BgB,WAM7B,OACET,EAAArG,EAAAC,cAACqG,EAAA,EAAD,CAAe1E,SAAU,SAACjN,EAAGmN,GAAJ,OAAiByE,QAAQC,IAAI1E,KAEpDuE,EAAArG,EAAAC,cAAA,SAAOwG,QAAQ,mBAAf,YACAJ,EAAArG,EAAAC,cAAA,SAAOtB,KAAK,OAAOgD,KAAK,SAASD,GAAG,oBAEpC2E,EAAArG,EAAAC,cAACqG,EAAA,EAAD,CACExC,QAAS,CAAC,SAAU,UACpBD,cAbN,SAA4BkD,EAAQC,GAClC,OAAQD,GAAUA,EAAOlV,OAAS,GACtBmV,GAAUA,EAAOnV,OAAS,IASpC,0CAOAwU,EAAArG,EAAAC,cAAA,SAAOwG,QAAQ,mBAAf,YACAJ,EAAArG,EAAAC,cAAA,SAAOtB,KAAK,OAAOgD,KAAK,SAASD,GAAG,oBAEpC2E,EAAArG,EAAAC,cAAA,SAAOtB,KAAK,SAASrN,MAAM,qCCHlB2V,EAlBM,WACjB,OACEZ,EAAArG,EAAAC,cAACqG,EAAA,EAAD,CAAe5E,GAAG,gBAAgBE,SAAU,SAACjN,EAAGmN,GAAJ,OAAiByE,QAAQC,IAAI1E,KAEvEuE,EAAArG,EAAAC,cAAA,SAAOwG,QAAQ,kBAAf,UACAJ,EAAArG,EAAAC,cAACqG,EAAA,EAAD,CAAWxC,QAAQ,QAAQD,cAAe5S,IAAWc,UAArD,qBAGAsU,EAAArG,EAAAC,cAACqG,EAAA,EAAD,CAAWxC,QAAQ,QAAQD,cAAe5S,IAAWQ,OAArD,sCAGA4U,EAAArG,EAAAC,cAAA,SAAOtB,KAAK,QAAQgD,KAAK,QAAQD,GAAG,mBAEpC2E,EAAArG,EAAAC,cAAA,SAAOtB,KAAK,SAASrN,MAAM,qCCyBpB4V,EAvCO,WAQpB,OACEb,EAAArG,EAAAC,cAACqG,EAAA,EAAD,CAAexE,SARA,CACfH,KAAM,eACNlQ,MAAO,kBACPJ,MAAO,eACP8V,SAAU,iBAIyBvF,SAAU,SAACjN,EAAGmN,GAAJ,OAAiByE,QAAQC,IAAI1E,KACxEuE,EAAArG,EAAAC,cAAA,SAAOwG,QAAQ,iBAAf,SACAJ,EAAArG,EAAAC,cAAA,SAAOtB,KAAK,OAAOgD,KAAK,OAAOD,GAAG,kBAElC2E,EAAArG,EAAAC,cAAA,SAAOwG,QAAQ,kBAAf,UACAJ,EAAArG,EAAAC,cAACqG,EAAA,EAAD,CAAWxC,QAAQ,QAAQD,cAAe5S,IAAWc,UAArD,qBAGAsU,EAAArG,EAAAC,cAACqG,EAAA,EAAD,CAAWxC,QAAQ,QAAQD,cAAe5S,IAAWQ,OAArD,sCAGA4U,EAAArG,EAAAC,cAAA,SAAOtB,KAAK,QAAQgD,KAAK,QAAQD,GAAG,mBAEpC2E,EAAArG,EAAAC,cAAA,SAAOwG,QAAQ,kBAAf,cACAJ,EAAArG,EAAAC,cAACqG,EAAA,EAAD,CAAWxC,QAAQ,QAAQD,cAAe5S,IAAWI,OAArD,qCAGAgV,EAAArG,EAAAC,cAAA,SAAOtB,KAAK,MAAMgD,KAAK,QAAQD,GAAG,mBAElC2E,EAAArG,EAAAC,cAAA,SAAOwG,QAAQ,qBAAf,aACAJ,EAAArG,EAAAC,cAACqG,EAAA,EAAD,CAAWxC,QAAQ,WAAWD,cAAe5S,IAAWa,UAAU,KAAlE,2CAGAuU,EAAArG,EAAAC,cAAA,YAAU0B,KAAK,WAAWD,GAAG,sBAE7B2E,EAAArG,EAAAC,cAAA,SAAOtB,KAAK,SAASrN,MAAM,4CChBlB8V,EAlBU,WACvB,OACEf,EAAArG,EAAAC,cAACqG,EAAA,EAAD,CAAe1E,SAAU,SAACjN,EAAGmN,GAAJ,OAAiByE,QAAQC,IAAI1E,KAEnD5P,OAAAmV,EAAA,EAAAnV,CAAII,MAAM,KAAKH,QAAQuI,IAAI,SAAA4M,GAAG,OAC7BjB,EAAArG,EAAAC,cAAA,OAAKjL,IAAKsS,GACRjB,EAAArG,EAAAC,cAAA,SAAOwG,QAAO,kBAAAc,OAAoBD,IAAlC,SAAgDA,EAAhD,KACAjB,EAAArG,EAAAC,cAACqG,EAAA,EAAD,CAAWxC,QAAO,SAAAyD,OAAWD,GAAOzD,cAAe5S,IAAWc,UAA9D,qBAGAsU,EAAArG,EAAAC,cAAA,SAAOtB,KAAK,OAAOgD,KAAI,SAAA4F,OAAWD,GAAO5F,GAAE,kBAAA6F,OAAoBD,QAGnEjB,EAAArG,EAAAC,cAAA,SAAOtB,KAAK,SAASrN,MAAM,qCC+QlBkW,EAvRH,WACV,OACEnB,EAAArG,EAAAC,cAAAoG,EAAArG,EAAAyH,SAAA,KACEpB,EAAArG,EAAAC,cAAA,eACEoG,EAAArG,EAAAC,cAAA,8BACAoG,EAAArG,EAAAC,cAAA,uEACAoG,EAAArG,EAAAC,cAAA,YAAMoG,EAAArG,EAAAC,cAAA,KAAGyH,KAAK,kDAAR,OAAN,MAAyErB,EAAArG,EAAAC,cAAA,KAAGyH,KAAK,2DAAR,WAEzErB,EAAArG,EAAAC,cAAA,OAAKC,UAAU,WACbmG,EAAArG,EAAAC,cAAA,OAAKC,UAAU,gBACbmG,EAAArG,EAAAC,cAAA,8BACAoG,EAAArG,EAAAC,cAAA,KAAGyH,KAAK,8GAAR,UACArB,EAAArG,EAAAC,cAAA,UACEoG,EAAArG,EAAAC,cAAA,oIAGAoG,EAAArG,EAAAC,cAAA,0FACqFoG,EAAArG,EAAAC,cAAA,WADrF,yBAEEoG,EAAArG,EAAAC,cAAA,UACEoG,EAAArG,EAAAC,cAAA,gEACAoG,EAAArG,EAAAC,cAAA,8DACAoG,EAAArG,EAAAC,cAAA,+EAGFoG,EAAArG,EAAAC,cAAA,qGAGJoG,EAAArG,EAAAC,cAAA,mzEAsDFoG,EAAArG,EAAAC,cAAA,OAAKC,UAAU,0BACbmG,EAAArG,EAAAC,cAAC0H,EAAD,QAIJtB,EAAArG,EAAAC,cAAA,OAAKC,UAAU,WACbmG,EAAArG,EAAAC,cAAA,OAAKC,UAAU,gBACbmG,EAAArG,EAAAC,cAAA,yCACAoG,EAAArG,EAAAC,cAAA,KAAGyH,KAAK,iHAAR,UACArB,EAAArG,EAAAC,cAAA,wFACAoG,EAAArG,EAAAC,cAAA,oeAeFoG,EAAArG,EAAAC,cAAA,OAAKC,UAAU,0BACbmG,EAAArG,EAAAC,cAAC2H,EAAD,QAIJvB,EAAArG,EAAAC,cAAA,OAAKC,UAAU,WACbmG,EAAArG,EAAAC,cAAA,OAAKC,UAAU,gBACbmG,EAAArG,EAAAC,cAAA,gEACAoG,EAAArG,EAAAC,cAAA,KAAGyH,KAAK,yHAAR,UACArB,EAAArG,EAAAC,cAAA,+EAAsEoG,EAAArG,EAAAC,cAAA,oBAAtE,SACAoG,EAAArG,EAAAC,cAAA,gCAAuBoG,EAAArG,EAAAC,cAAA,8BAAvB,kCAA8EoG,EAAArG,EAAAC,cAAA,mBAA9E,OAA+FoG,EAAArG,EAAAC,cAAA,mBAA/F,kBACAoG,EAAArG,EAAAC,cAAA,qyBA6BFoG,EAAArG,EAAAC,cAAA,OAAKC,UAAU,0BACbmG,EAAArG,EAAAC,cAAC4H,EAAD,QAIJxB,EAAArG,EAAAC,cAAA,OAAKC,UAAU,WACbmG,EAAArG,EAAAC,cAAA,OAAKC,UAAU,gBACbmG,EAAArG,EAAAC,cAAA,2BACAoG,EAAArG,EAAAC,cAAA,KAAGyH,KAAK,8GAAR,UACArB,EAAArG,EAAAC,cAAA,uGACAoG,EAAArG,EAAAC,cAAA,qGACAoG,EAAArG,EAAAC,cAAA,4vBA6BFoG,EAAArG,EAAAC,cAAA,OAAKC,UAAU,0BACbmG,EAAArG,EAAAC,cAAC6H,EAAD,QAIJzB,EAAArG,EAAAC,cAAA,OAAKC,UAAU,WACbmG,EAAArG,EAAAC,cAAA,OAAKC,UAAU,gBACbmG,EAAArG,EAAAC,cAAA,mCACAoG,EAAArG,EAAAC,cAAA,KAAGyH,KAAK,+GAAR,UACArB,EAAArG,EAAAC,cAAA,mFACAoG,EAAArG,EAAAC,cAAA,q5CAyCFoG,EAAArG,EAAAC,cAAA,OAAKC,UAAU,0BACbmG,EAAArG,EAAAC,cAAC8H,EAAD,QAIJ1B,EAAArG,EAAAC,cAAA,OAAKC,UAAU,WACbmG,EAAArG,EAAAC,cAAA,OAAKC,UAAU,gBACbmG,EAAArG,EAAAC,cAAA,yBACAoG,EAAArG,EAAAC,cAAA,KAAGyH,KAAK,kHAAR,UACArB,EAAArG,EAAAC,cAAA,sIACAoG,EAAArG,EAAAC,cAAA,ujBAkBFoG,EAAArG,EAAAC,cAAA,OAAKC,UAAU,0BACbmG,EAAArG,EAAAC,cAAA,eACEoG,EAAArG,EAAAC,cAAA,0CACAoG,EAAArG,EAAAC,cAAA,SACEoG,EAAArG,EAAAC,cAAC+H,EAAD,aC/QhBC,IAASC,OAAO7B,EAAArG,EAAAC,cAACkI,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.42bce7af.chunk.js","sourcesContent":["import React, { cloneElement, useState, useRef, useEffect } from 'react';\nvar validators = {\n  phone: function phone(value) {\n    return PHONE_REGEX.test(value);\n  },\n  email: function email(value) {\n    return EMAIL_REGEX.test(value);\n  },\n  minLength: function minLength(len) {\n    return function (value) {\n      return value.length >= len;\n    };\n  },\n  maxLength: function maxLength(len) {\n    return function (value) {\n      return value.length <= len;\n    };\n  },\n  required: function required() {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return typeof value === 'number' || value !== null && value !== undefined && value.length !== 0 && Object.keys(value).length !== 0 && value !== '';\n  } // eslint-disable-next-line no-control-regex\n\n};\nvar EMAIL_REGEX = /^$|(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\nvar PHONE_REGEX = /^$|^(\\+\\d{1,3})?\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4})$/;\n\nvar asArray = function asArray(val) {\n  return Array.isArray(val) ? val : [val];\n};\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar lodash_mergewith = createCommonjsModule(function (module, exports) {\n  /**\n   * Lodash (Custom Build) <https://lodash.com/>\n   * Build: `lodash modularize exports=\"npm\" -o ./`\n   * Copyright JS Foundation and other contributors <https://js.foundation/>\n   * Released under MIT license <https://lodash.com/license>\n   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n   */\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n  /** Used to stand-in for `undefined` hash values. */\n\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n  /** Used as references for various `Number` constants. */\n\n  var MAX_SAFE_INTEGER = 9007199254740991;\n  /** `Object#toString` result references. */\n\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]';\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n  /** Used to detect host constructors (Safari). */\n\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n  /** Used to detect unsigned integer values. */\n\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n  /** Used to identify `toStringTag` values of typed arrays. */\n\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n  /** Detect free variable `global` from Node.js. */\n\n  var freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;\n  /** Detect free variable `self`. */\n\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n  /** Used as a reference to the global object. */\n\n  var root = freeGlobal || freeSelf || Function('return this')();\n  /** Detect free variable `exports`. */\n\n  var freeExports = exports && !exports.nodeType && exports;\n  /** Detect free variable `module`. */\n\n  var freeModule = freeExports && 'object' == 'object' && module && !module.nodeType && module;\n  /** Detect the popular CommonJS extension `module.exports`. */\n\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n  /** Detect free variable `process` from Node.js. */\n\n  var freeProcess = moduleExports && freeGlobal.process;\n  /** Used to access faster Node.js helpers. */\n\n  var nodeUtil = function () {\n    try {\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }();\n  /* Node.js helper references. */\n\n\n  var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0:\n        return func.call(thisArg);\n\n      case 1:\n        return func.call(thisArg, args[0]);\n\n      case 2:\n        return func.call(thisArg, args[0], args[1]);\n\n      case 3:\n        return func.call(thisArg, args[0], args[1], args[2]);\n    }\n\n    return func.apply(thisArg, args);\n  }\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n\n\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n\n    return result;\n  }\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n\n\n  function baseUnary(func) {\n    return function (value) {\n      return func(value);\n    };\n  }\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n\n\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n\n\n  function overArg(func, transform) {\n    return function (arg) {\n      return func(transform(arg));\n    };\n  }\n  /**\n   * Gets the value at `key`, unless `key` is \"__proto__\".\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n\n\n  function safeGet(object, key) {\n    return key == '__proto__' ? undefined : object[key];\n  }\n  /** Used for built-in method references. */\n\n\n  var arrayProto = Array.prototype,\n      funcProto = Function.prototype,\n      objectProto = Object.prototype;\n  /** Used to detect overreaching core-js shims. */\n\n  var coreJsData = root['__core-js_shared__'];\n  /** Used to resolve the decompiled source of functions. */\n\n  var funcToString = funcProto.toString;\n  /** Used to check objects for own properties. */\n\n  var hasOwnProperty = objectProto.hasOwnProperty;\n  /** Used to detect methods masquerading as native. */\n\n  var maskSrcKey = function () {\n    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n    return uid ? 'Symbol(src)_1.' + uid : '';\n  }();\n  /**\n   * Used to resolve the\n   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n   * of values.\n   */\n\n\n  var nativeObjectToString = objectProto.toString;\n  /** Used to infer the `Object` constructor. */\n\n  var objectCtorString = funcToString.call(Object);\n  /** Used to detect if a method is native. */\n\n  var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n  /** Built-in value references. */\n\n  var Buffer = moduleExports ? root.Buffer : undefined,\n      Symbol = root.Symbol,\n      Uint8Array = root.Uint8Array,\n      allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n      getPrototype = overArg(Object.getPrototypeOf, Object),\n      objectCreate = Object.create,\n      propertyIsEnumerable = objectProto.propertyIsEnumerable,\n      splice = arrayProto.splice,\n      symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n  var defineProperty = function () {\n    try {\n      var func = getNative(Object, 'defineProperty');\n      func({}, '', {});\n      return func;\n    } catch (e) {}\n  }();\n  /* Built-in method references for those with the same name as other `lodash` methods. */\n\n\n  var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n      nativeMax = Math.max,\n      nativeNow = Date.now;\n  /* Built-in method references that are verified to be native. */\n\n  var Map = getNative(root, 'Map'),\n      nativeCreate = getNative(Object, 'create');\n  /**\n   * The base implementation of `_.create` without support for assigning\n   * properties to the created object.\n   *\n   * @private\n   * @param {Object} proto The object to inherit from.\n   * @returns {Object} Returns the new object.\n   */\n\n  var baseCreate = function () {\n    function object() {}\n\n    return function (proto) {\n      if (!isObject(proto)) {\n        return {};\n      }\n\n      if (objectCreate) {\n        return objectCreate(proto);\n      }\n\n      object.prototype = proto;\n      var result = new object();\n      object.prototype = undefined;\n      return result;\n    };\n  }();\n  /**\n   * Creates a hash object.\n   *\n   * @private\n   * @constructor\n   * @param {Array} [entries] The key-value pairs to cache.\n   */\n\n\n  function Hash(entries) {\n    var index = -1,\n        length = entries == null ? 0 : entries.length;\n    this.clear();\n\n    while (++index < length) {\n      var entry = entries[index];\n      this.set(entry[0], entry[1]);\n    }\n  }\n  /**\n   * Removes all key-value entries from the hash.\n   *\n   * @private\n   * @name clear\n   * @memberOf Hash\n   */\n\n\n  function hashClear() {\n    this.__data__ = nativeCreate ? nativeCreate(null) : {};\n    this.size = 0;\n  }\n  /**\n   * Removes `key` and its value from the hash.\n   *\n   * @private\n   * @name delete\n   * @memberOf Hash\n   * @param {Object} hash The hash to modify.\n   * @param {string} key The key of the value to remove.\n   * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n   */\n\n\n  function hashDelete(key) {\n    var result = this.has(key) && delete this.__data__[key];\n    this.size -= result ? 1 : 0;\n    return result;\n  }\n  /**\n   * Gets the hash value for `key`.\n   *\n   * @private\n   * @name get\n   * @memberOf Hash\n   * @param {string} key The key of the value to get.\n   * @returns {*} Returns the entry value.\n   */\n\n\n  function hashGet(key) {\n    var data = this.__data__;\n\n    if (nativeCreate) {\n      var result = data[key];\n      return result === HASH_UNDEFINED ? undefined : result;\n    }\n\n    return hasOwnProperty.call(data, key) ? data[key] : undefined;\n  }\n  /**\n   * Checks if a hash value for `key` exists.\n   *\n   * @private\n   * @name has\n   * @memberOf Hash\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n\n\n  function hashHas(key) {\n    var data = this.__data__;\n    return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n  }\n  /**\n   * Sets the hash `key` to `value`.\n   *\n   * @private\n   * @name set\n   * @memberOf Hash\n   * @param {string} key The key of the value to set.\n   * @param {*} value The value to set.\n   * @returns {Object} Returns the hash instance.\n   */\n\n\n  function hashSet(key, value) {\n    var data = this.__data__;\n    this.size += this.has(key) ? 0 : 1;\n    data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n    return this;\n  } // Add methods to `Hash`.\n\n\n  Hash.prototype.clear = hashClear;\n  Hash.prototype['delete'] = hashDelete;\n  Hash.prototype.get = hashGet;\n  Hash.prototype.has = hashHas;\n  Hash.prototype.set = hashSet;\n  /**\n   * Creates an list cache object.\n   *\n   * @private\n   * @constructor\n   * @param {Array} [entries] The key-value pairs to cache.\n   */\n\n  function ListCache(entries) {\n    var index = -1,\n        length = entries == null ? 0 : entries.length;\n    this.clear();\n\n    while (++index < length) {\n      var entry = entries[index];\n      this.set(entry[0], entry[1]);\n    }\n  }\n  /**\n   * Removes all key-value entries from the list cache.\n   *\n   * @private\n   * @name clear\n   * @memberOf ListCache\n   */\n\n\n  function listCacheClear() {\n    this.__data__ = [];\n    this.size = 0;\n  }\n  /**\n   * Removes `key` and its value from the list cache.\n   *\n   * @private\n   * @name delete\n   * @memberOf ListCache\n   * @param {string} key The key of the value to remove.\n   * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n   */\n\n\n  function listCacheDelete(key) {\n    var data = this.__data__,\n        index = assocIndexOf(data, key);\n\n    if (index < 0) {\n      return false;\n    }\n\n    var lastIndex = data.length - 1;\n\n    if (index == lastIndex) {\n      data.pop();\n    } else {\n      splice.call(data, index, 1);\n    }\n\n    --this.size;\n    return true;\n  }\n  /**\n   * Gets the list cache value for `key`.\n   *\n   * @private\n   * @name get\n   * @memberOf ListCache\n   * @param {string} key The key of the value to get.\n   * @returns {*} Returns the entry value.\n   */\n\n\n  function listCacheGet(key) {\n    var data = this.__data__,\n        index = assocIndexOf(data, key);\n    return index < 0 ? undefined : data[index][1];\n  }\n  /**\n   * Checks if a list cache value for `key` exists.\n   *\n   * @private\n   * @name has\n   * @memberOf ListCache\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n\n\n  function listCacheHas(key) {\n    return assocIndexOf(this.__data__, key) > -1;\n  }\n  /**\n   * Sets the list cache `key` to `value`.\n   *\n   * @private\n   * @name set\n   * @memberOf ListCache\n   * @param {string} key The key of the value to set.\n   * @param {*} value The value to set.\n   * @returns {Object} Returns the list cache instance.\n   */\n\n\n  function listCacheSet(key, value) {\n    var data = this.__data__,\n        index = assocIndexOf(data, key);\n\n    if (index < 0) {\n      ++this.size;\n      data.push([key, value]);\n    } else {\n      data[index][1] = value;\n    }\n\n    return this;\n  } // Add methods to `ListCache`.\n\n\n  ListCache.prototype.clear = listCacheClear;\n  ListCache.prototype['delete'] = listCacheDelete;\n  ListCache.prototype.get = listCacheGet;\n  ListCache.prototype.has = listCacheHas;\n  ListCache.prototype.set = listCacheSet;\n  /**\n   * Creates a map cache object to store key-value pairs.\n   *\n   * @private\n   * @constructor\n   * @param {Array} [entries] The key-value pairs to cache.\n   */\n\n  function MapCache(entries) {\n    var index = -1,\n        length = entries == null ? 0 : entries.length;\n    this.clear();\n\n    while (++index < length) {\n      var entry = entries[index];\n      this.set(entry[0], entry[1]);\n    }\n  }\n  /**\n   * Removes all key-value entries from the map.\n   *\n   * @private\n   * @name clear\n   * @memberOf MapCache\n   */\n\n\n  function mapCacheClear() {\n    this.size = 0;\n    this.__data__ = {\n      'hash': new Hash(),\n      'map': new (Map || ListCache)(),\n      'string': new Hash()\n    };\n  }\n  /**\n   * Removes `key` and its value from the map.\n   *\n   * @private\n   * @name delete\n   * @memberOf MapCache\n   * @param {string} key The key of the value to remove.\n   * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n   */\n\n\n  function mapCacheDelete(key) {\n    var result = getMapData(this, key)['delete'](key);\n    this.size -= result ? 1 : 0;\n    return result;\n  }\n  /**\n   * Gets the map value for `key`.\n   *\n   * @private\n   * @name get\n   * @memberOf MapCache\n   * @param {string} key The key of the value to get.\n   * @returns {*} Returns the entry value.\n   */\n\n\n  function mapCacheGet(key) {\n    return getMapData(this, key).get(key);\n  }\n  /**\n   * Checks if a map value for `key` exists.\n   *\n   * @private\n   * @name has\n   * @memberOf MapCache\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n\n\n  function mapCacheHas(key) {\n    return getMapData(this, key).has(key);\n  }\n  /**\n   * Sets the map `key` to `value`.\n   *\n   * @private\n   * @name set\n   * @memberOf MapCache\n   * @param {string} key The key of the value to set.\n   * @param {*} value The value to set.\n   * @returns {Object} Returns the map cache instance.\n   */\n\n\n  function mapCacheSet(key, value) {\n    var data = getMapData(this, key),\n        size = data.size;\n    data.set(key, value);\n    this.size += data.size == size ? 0 : 1;\n    return this;\n  } // Add methods to `MapCache`.\n\n\n  MapCache.prototype.clear = mapCacheClear;\n  MapCache.prototype['delete'] = mapCacheDelete;\n  MapCache.prototype.get = mapCacheGet;\n  MapCache.prototype.has = mapCacheHas;\n  MapCache.prototype.set = mapCacheSet;\n  /**\n   * Creates a stack cache object to store key-value pairs.\n   *\n   * @private\n   * @constructor\n   * @param {Array} [entries] The key-value pairs to cache.\n   */\n\n  function Stack(entries) {\n    var data = this.__data__ = new ListCache(entries);\n    this.size = data.size;\n  }\n  /**\n   * Removes all key-value entries from the stack.\n   *\n   * @private\n   * @name clear\n   * @memberOf Stack\n   */\n\n\n  function stackClear() {\n    this.__data__ = new ListCache();\n    this.size = 0;\n  }\n  /**\n   * Removes `key` and its value from the stack.\n   *\n   * @private\n   * @name delete\n   * @memberOf Stack\n   * @param {string} key The key of the value to remove.\n   * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n   */\n\n\n  function stackDelete(key) {\n    var data = this.__data__,\n        result = data['delete'](key);\n    this.size = data.size;\n    return result;\n  }\n  /**\n   * Gets the stack value for `key`.\n   *\n   * @private\n   * @name get\n   * @memberOf Stack\n   * @param {string} key The key of the value to get.\n   * @returns {*} Returns the entry value.\n   */\n\n\n  function stackGet(key) {\n    return this.__data__.get(key);\n  }\n  /**\n   * Checks if a stack value for `key` exists.\n   *\n   * @private\n   * @name has\n   * @memberOf Stack\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n\n\n  function stackHas(key) {\n    return this.__data__.has(key);\n  }\n  /**\n   * Sets the stack `key` to `value`.\n   *\n   * @private\n   * @name set\n   * @memberOf Stack\n   * @param {string} key The key of the value to set.\n   * @param {*} value The value to set.\n   * @returns {Object} Returns the stack cache instance.\n   */\n\n\n  function stackSet(key, value) {\n    var data = this.__data__;\n\n    if (data instanceof ListCache) {\n      var pairs = data.__data__;\n\n      if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n        pairs.push([key, value]);\n        this.size = ++data.size;\n        return this;\n      }\n\n      data = this.__data__ = new MapCache(pairs);\n    }\n\n    data.set(key, value);\n    this.size = data.size;\n    return this;\n  } // Add methods to `Stack`.\n\n\n  Stack.prototype.clear = stackClear;\n  Stack.prototype['delete'] = stackDelete;\n  Stack.prototype.get = stackGet;\n  Stack.prototype.has = stackHas;\n  Stack.prototype.set = stackSet;\n  /**\n   * Creates an array of the enumerable property names of the array-like `value`.\n   *\n   * @private\n   * @param {*} value The value to query.\n   * @param {boolean} inherited Specify returning inherited property names.\n   * @returns {Array} Returns the array of property names.\n   */\n\n  function arrayLikeKeys(value, inherited) {\n    var isArr = isArray(value),\n        isArg = !isArr && isArguments(value),\n        isBuff = !isArr && !isArg && isBuffer(value),\n        isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n        skipIndexes = isArr || isArg || isBuff || isType,\n        result = skipIndexes ? baseTimes(value.length, String) : [],\n        length = result.length;\n\n    for (var key in value) {\n      if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n      key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n      isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n      isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n      isIndex(key, length)))) {\n        result.push(key);\n      }\n    }\n\n    return result;\n  }\n  /**\n   * This function is like `assignValue` except that it doesn't assign\n   * `undefined` values.\n   *\n   * @private\n   * @param {Object} object The object to modify.\n   * @param {string} key The key of the property to assign.\n   * @param {*} value The value to assign.\n   */\n\n\n  function assignMergeValue(object, key, value) {\n    if (value !== undefined && !eq(object[key], value) || value === undefined && !(key in object)) {\n      baseAssignValue(object, key, value);\n    }\n  }\n  /**\n   * Assigns `value` to `key` of `object` if the existing value is not equivalent\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * for equality comparisons.\n   *\n   * @private\n   * @param {Object} object The object to modify.\n   * @param {string} key The key of the property to assign.\n   * @param {*} value The value to assign.\n   */\n\n\n  function assignValue(object, key, value) {\n    var objValue = object[key];\n\n    if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined && !(key in object)) {\n      baseAssignValue(object, key, value);\n    }\n  }\n  /**\n   * Gets the index at which the `key` is found in `array` of key-value pairs.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} key The key to search for.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n\n\n  function assocIndexOf(array, key) {\n    var length = array.length;\n\n    while (length--) {\n      if (eq(array[length][0], key)) {\n        return length;\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * The base implementation of `assignValue` and `assignMergeValue` without\n   * value checks.\n   *\n   * @private\n   * @param {Object} object The object to modify.\n   * @param {string} key The key of the property to assign.\n   * @param {*} value The value to assign.\n   */\n\n\n  function baseAssignValue(object, key, value) {\n    if (key == '__proto__' && defineProperty) {\n      defineProperty(object, key, {\n        'configurable': true,\n        'enumerable': true,\n        'value': value,\n        'writable': true\n      });\n    } else {\n      object[key] = value;\n    }\n  }\n  /**\n   * The base implementation of `baseForOwn` which iterates over `object`\n   * properties returned by `keysFunc` and invokes `iteratee` for each property.\n   * Iteratee functions may exit iteration early by explicitly returning `false`.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {Function} keysFunc The function to get the keys of `object`.\n   * @returns {Object} Returns `object`.\n   */\n\n\n  var baseFor = createBaseFor();\n  /**\n   * The base implementation of `getTag` without fallbacks for buggy environments.\n   *\n   * @private\n   * @param {*} value The value to query.\n   * @returns {string} Returns the `toStringTag`.\n   */\n\n  function baseGetTag(value) {\n    if (value == null) {\n      return value === undefined ? undefinedTag : nullTag;\n    }\n\n    return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n  }\n  /**\n   * The base implementation of `_.isArguments`.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n   */\n\n\n  function baseIsArguments(value) {\n    return isObjectLike(value) && baseGetTag(value) == argsTag;\n  }\n  /**\n   * The base implementation of `_.isNative` without bad shim checks.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a native function,\n   *  else `false`.\n   */\n\n\n  function baseIsNative(value) {\n    if (!isObject(value) || isMasked(value)) {\n      return false;\n    }\n\n    var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n    return pattern.test(toSource(value));\n  }\n  /**\n   * The base implementation of `_.isTypedArray` without Node.js optimizations.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n   */\n\n\n  function baseIsTypedArray(value) {\n    return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n  }\n  /**\n   * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   */\n\n\n  function baseKeysIn(object) {\n    if (!isObject(object)) {\n      return nativeKeysIn(object);\n    }\n\n    var isProto = isPrototype(object),\n        result = [];\n\n    for (var key in object) {\n      if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n        result.push(key);\n      }\n    }\n\n    return result;\n  }\n  /**\n   * The base implementation of `_.merge` without support for multiple sources.\n   *\n   * @private\n   * @param {Object} object The destination object.\n   * @param {Object} source The source object.\n   * @param {number} srcIndex The index of `source`.\n   * @param {Function} [customizer] The function to customize merged values.\n   * @param {Object} [stack] Tracks traversed source values and their merged\n   *  counterparts.\n   */\n\n\n  function baseMerge(object, source, srcIndex, customizer, stack) {\n    if (object === source) {\n      return;\n    }\n\n    baseFor(source, function (srcValue, key) {\n      if (isObject(srcValue)) {\n        stack || (stack = new Stack());\n        baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n      } else {\n        var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + '', object, source, stack) : undefined;\n\n        if (newValue === undefined) {\n          newValue = srcValue;\n        }\n\n        assignMergeValue(object, key, newValue);\n      }\n    }, keysIn);\n  }\n  /**\n   * A specialized version of `baseMerge` for arrays and objects which performs\n   * deep merges and tracks traversed objects enabling objects with circular\n   * references to be merged.\n   *\n   * @private\n   * @param {Object} object The destination object.\n   * @param {Object} source The source object.\n   * @param {string} key The key of the value to merge.\n   * @param {number} srcIndex The index of `source`.\n   * @param {Function} mergeFunc The function to merge values.\n   * @param {Function} [customizer] The function to customize assigned values.\n   * @param {Object} [stack] Tracks traversed source values and their merged\n   *  counterparts.\n   */\n\n\n  function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n    var objValue = safeGet(object, key),\n        srcValue = safeGet(source, key),\n        stacked = stack.get(srcValue);\n\n    if (stacked) {\n      assignMergeValue(object, key, stacked);\n      return;\n    }\n\n    var newValue = customizer ? customizer(objValue, srcValue, key + '', object, source, stack) : undefined;\n    var isCommon = newValue === undefined;\n\n    if (isCommon) {\n      var isArr = isArray(srcValue),\n          isBuff = !isArr && isBuffer(srcValue),\n          isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n      newValue = srcValue;\n\n      if (isArr || isBuff || isTyped) {\n        if (isArray(objValue)) {\n          newValue = objValue;\n        } else if (isArrayLikeObject(objValue)) {\n          newValue = copyArray(objValue);\n        } else if (isBuff) {\n          isCommon = false;\n          newValue = cloneBuffer(srcValue, true);\n        } else if (isTyped) {\n          isCommon = false;\n          newValue = cloneTypedArray(srcValue, true);\n        } else {\n          newValue = [];\n        }\n      } else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n        newValue = objValue;\n\n        if (isArguments(objValue)) {\n          newValue = toPlainObject(objValue);\n        } else if (!isObject(objValue) || srcIndex && isFunction(objValue)) {\n          newValue = initCloneObject(srcValue);\n        }\n      } else {\n        isCommon = false;\n      }\n    }\n\n    if (isCommon) {\n      // Recursively merge objects and arrays (susceptible to call stack limits).\n      stack.set(srcValue, newValue);\n      mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n      stack['delete'](srcValue);\n    }\n\n    assignMergeValue(object, key, newValue);\n  }\n  /**\n   * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @param {number} [start=func.length-1] The start position of the rest parameter.\n   * @returns {Function} Returns the new function.\n   */\n\n\n  function baseRest(func, start) {\n    return setToString(overRest(func, start, identity), func + '');\n  }\n  /**\n   * The base implementation of `setToString` without support for hot loop shorting.\n   *\n   * @private\n   * @param {Function} func The function to modify.\n   * @param {Function} string The `toString` result.\n   * @returns {Function} Returns `func`.\n   */\n\n\n  var baseSetToString = !defineProperty ? identity : function (func, string) {\n    return defineProperty(func, 'toString', {\n      'configurable': true,\n      'enumerable': false,\n      'value': constant(string),\n      'writable': true\n    });\n  };\n  /**\n   * Creates a clone of  `buffer`.\n   *\n   * @private\n   * @param {Buffer} buffer The buffer to clone.\n   * @param {boolean} [isDeep] Specify a deep clone.\n   * @returns {Buffer} Returns the cloned buffer.\n   */\n\n  function cloneBuffer(buffer, isDeep) {\n    if (isDeep) {\n      return buffer.slice();\n    }\n\n    var length = buffer.length,\n        result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n    buffer.copy(result);\n    return result;\n  }\n  /**\n   * Creates a clone of `arrayBuffer`.\n   *\n   * @private\n   * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n   * @returns {ArrayBuffer} Returns the cloned array buffer.\n   */\n\n\n  function cloneArrayBuffer(arrayBuffer) {\n    var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n    new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n    return result;\n  }\n  /**\n   * Creates a clone of `typedArray`.\n   *\n   * @private\n   * @param {Object} typedArray The typed array to clone.\n   * @param {boolean} [isDeep] Specify a deep clone.\n   * @returns {Object} Returns the cloned typed array.\n   */\n\n\n  function cloneTypedArray(typedArray, isDeep) {\n    var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n    return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n  }\n  /**\n   * Copies the values of `source` to `array`.\n   *\n   * @private\n   * @param {Array} source The array to copy values from.\n   * @param {Array} [array=[]] The array to copy values to.\n   * @returns {Array} Returns `array`.\n   */\n\n\n  function copyArray(source, array) {\n    var index = -1,\n        length = source.length;\n    array || (array = Array(length));\n\n    while (++index < length) {\n      array[index] = source[index];\n    }\n\n    return array;\n  }\n  /**\n   * Copies properties of `source` to `object`.\n   *\n   * @private\n   * @param {Object} source The object to copy properties from.\n   * @param {Array} props The property identifiers to copy.\n   * @param {Object} [object={}] The object to copy properties to.\n   * @param {Function} [customizer] The function to customize copied values.\n   * @returns {Object} Returns `object`.\n   */\n\n\n  function copyObject(source, props, object, customizer) {\n    var isNew = !object;\n    object || (object = {});\n    var index = -1,\n        length = props.length;\n\n    while (++index < length) {\n      var key = props[index];\n      var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;\n\n      if (newValue === undefined) {\n        newValue = source[key];\n      }\n\n      if (isNew) {\n        baseAssignValue(object, key, newValue);\n      } else {\n        assignValue(object, key, newValue);\n      }\n    }\n\n    return object;\n  }\n  /**\n   * Creates a function like `_.assign`.\n   *\n   * @private\n   * @param {Function} assigner The function to assign values.\n   * @returns {Function} Returns the new assigner function.\n   */\n\n\n  function createAssigner(assigner) {\n    return baseRest(function (object, sources) {\n      var index = -1,\n          length = sources.length,\n          customizer = length > 1 ? sources[length - 1] : undefined,\n          guard = length > 2 ? sources[2] : undefined;\n      customizer = assigner.length > 3 && typeof customizer == 'function' ? (length--, customizer) : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        customizer = length < 3 ? undefined : customizer;\n        length = 1;\n      }\n\n      object = Object(object);\n\n      while (++index < length) {\n        var source = sources[index];\n\n        if (source) {\n          assigner(object, source, index, customizer);\n        }\n      }\n\n      return object;\n    });\n  }\n  /**\n   * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n   *\n   * @private\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {Function} Returns the new base function.\n   */\n\n\n  function createBaseFor(fromRight) {\n    return function (object, iteratee, keysFunc) {\n      var index = -1,\n          iterable = Object(object),\n          props = keysFunc(object),\n          length = props.length;\n\n      while (length--) {\n        var key = props[fromRight ? length : ++index];\n\n        if (iteratee(iterable[key], key, iterable) === false) {\n          break;\n        }\n      }\n\n      return object;\n    };\n  }\n  /**\n   * Gets the data for `map`.\n   *\n   * @private\n   * @param {Object} map The map to query.\n   * @param {string} key The reference key.\n   * @returns {*} Returns the map data.\n   */\n\n\n  function getMapData(map, key) {\n    var data = map.__data__;\n    return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n  }\n  /**\n   * Gets the native function at `key` of `object`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {string} key The key of the method to get.\n   * @returns {*} Returns the function if it's native, else `undefined`.\n   */\n\n\n  function getNative(object, key) {\n    var value = getValue(object, key);\n    return baseIsNative(value) ? value : undefined;\n  }\n  /**\n   * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n   *\n   * @private\n   * @param {*} value The value to query.\n   * @returns {string} Returns the raw `toStringTag`.\n   */\n\n\n  function getRawTag(value) {\n    var isOwn = hasOwnProperty.call(value, symToStringTag),\n        tag = value[symToStringTag];\n\n    try {\n      value[symToStringTag] = undefined;\n    } catch (e) {}\n\n    var result = nativeObjectToString.call(value);\n    {\n      if (isOwn) {\n        value[symToStringTag] = tag;\n      } else {\n        delete value[symToStringTag];\n      }\n    }\n    return result;\n  }\n  /**\n   * Initializes an object clone.\n   *\n   * @private\n   * @param {Object} object The object to clone.\n   * @returns {Object} Returns the initialized clone.\n   */\n\n\n  function initCloneObject(object) {\n    return typeof object.constructor == 'function' && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};\n  }\n  /**\n   * Checks if `value` is a valid array-like index.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n   */\n\n\n  function isIndex(value, length) {\n    var type = typeof value;\n    length = length == null ? MAX_SAFE_INTEGER : length;\n    return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n  }\n  /**\n   * Checks if the given arguments are from an iteratee call.\n   *\n   * @private\n   * @param {*} value The potential iteratee value argument.\n   * @param {*} index The potential iteratee index or key argument.\n   * @param {*} object The potential iteratee object argument.\n   * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n   *  else `false`.\n   */\n\n\n  function isIterateeCall(value, index, object) {\n    if (!isObject(object)) {\n      return false;\n    }\n\n    var type = typeof index;\n\n    if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) {\n      return eq(object[index], value);\n    }\n\n    return false;\n  }\n  /**\n   * Checks if `value` is suitable for use as unique object key.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n   */\n\n\n  function isKeyable(value) {\n    var type = typeof value;\n    return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n  }\n  /**\n   * Checks if `func` has its source masked.\n   *\n   * @private\n   * @param {Function} func The function to check.\n   * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n   */\n\n\n  function isMasked(func) {\n    return !!maskSrcKey && maskSrcKey in func;\n  }\n  /**\n   * Checks if `value` is likely a prototype object.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n   */\n\n\n  function isPrototype(value) {\n    var Ctor = value && value.constructor,\n        proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n    return value === proto;\n  }\n  /**\n   * This function is like\n   * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n   * except that it includes inherited enumerable properties.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   */\n\n\n  function nativeKeysIn(object) {\n    var result = [];\n\n    if (object != null) {\n      for (var key in Object(object)) {\n        result.push(key);\n      }\n    }\n\n    return result;\n  }\n  /**\n   * Converts `value` to a string using `Object.prototype.toString`.\n   *\n   * @private\n   * @param {*} value The value to convert.\n   * @returns {string} Returns the converted string.\n   */\n\n\n  function objectToString(value) {\n    return nativeObjectToString.call(value);\n  }\n  /**\n   * A specialized version of `baseRest` which transforms the rest array.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @param {number} [start=func.length-1] The start position of the rest parameter.\n   * @param {Function} transform The rest array transform.\n   * @returns {Function} Returns the new function.\n   */\n\n\n  function overRest(func, start, transform) {\n    start = nativeMax(start === undefined ? func.length - 1 : start, 0);\n    return function () {\n      var args = arguments,\n          index = -1,\n          length = nativeMax(args.length - start, 0),\n          array = Array(length);\n\n      while (++index < length) {\n        array[index] = args[start + index];\n      }\n\n      index = -1;\n      var otherArgs = Array(start + 1);\n\n      while (++index < start) {\n        otherArgs[index] = args[index];\n      }\n\n      otherArgs[start] = transform(array);\n      return apply(func, this, otherArgs);\n    };\n  }\n  /**\n   * Sets the `toString` method of `func` to return `string`.\n   *\n   * @private\n   * @param {Function} func The function to modify.\n   * @param {Function} string The `toString` result.\n   * @returns {Function} Returns `func`.\n   */\n\n\n  var setToString = shortOut(baseSetToString);\n  /**\n   * Creates a function that'll short out and invoke `identity` instead\n   * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n   * milliseconds.\n   *\n   * @private\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new shortable function.\n   */\n\n  function shortOut(func) {\n    var count = 0,\n        lastCalled = 0;\n    return function () {\n      var stamp = nativeNow(),\n          remaining = HOT_SPAN - (stamp - lastCalled);\n      lastCalled = stamp;\n\n      if (remaining > 0) {\n        if (++count >= HOT_COUNT) {\n          return arguments[0];\n        }\n      } else {\n        count = 0;\n      }\n\n      return func.apply(undefined, arguments);\n    };\n  }\n  /**\n   * Converts `func` to its source code.\n   *\n   * @private\n   * @param {Function} func The function to convert.\n   * @returns {string} Returns the source code.\n   */\n\n\n  function toSource(func) {\n    if (func != null) {\n      try {\n        return funcToString.call(func);\n      } catch (e) {}\n\n      try {\n        return func + '';\n      } catch (e) {}\n    }\n\n    return '';\n  }\n  /**\n   * Performs a\n   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * comparison between two values to determine if they are equivalent.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   * var other = { 'a': 1 };\n   *\n   * _.eq(object, object);\n   * // => true\n   *\n   * _.eq(object, other);\n   * // => false\n   *\n   * _.eq('a', 'a');\n   * // => true\n   *\n   * _.eq('a', Object('a'));\n   * // => false\n   *\n   * _.eq(NaN, NaN);\n   * // => true\n   */\n\n\n  function eq(value, other) {\n    return value === other || value !== value && other !== other;\n  }\n  /**\n   * Checks if `value` is likely an `arguments` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n   *  else `false`.\n   * @example\n   *\n   * _.isArguments(function() { return arguments; }());\n   * // => true\n   *\n   * _.isArguments([1, 2, 3]);\n   * // => false\n   */\n\n\n  var isArguments = baseIsArguments(function () {\n    return arguments;\n  }()) ? baseIsArguments : function (value) {\n    return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n  };\n  /**\n   * Checks if `value` is classified as an `Array` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n   * @example\n   *\n   * _.isArray([1, 2, 3]);\n   * // => true\n   *\n   * _.isArray(document.body.children);\n   * // => false\n   *\n   * _.isArray('abc');\n   * // => false\n   *\n   * _.isArray(_.noop);\n   * // => false\n   */\n\n  var isArray = Array.isArray;\n  /**\n   * Checks if `value` is array-like. A value is considered array-like if it's\n   * not a function and has a `value.length` that's an integer greater than or\n   * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n   * @example\n   *\n   * _.isArrayLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isArrayLike(document.body.children);\n   * // => true\n   *\n   * _.isArrayLike('abc');\n   * // => true\n   *\n   * _.isArrayLike(_.noop);\n   * // => false\n   */\n\n  function isArrayLike(value) {\n    return value != null && isLength(value.length) && !isFunction(value);\n  }\n  /**\n   * This method is like `_.isArrayLike` except that it also checks if `value`\n   * is an object.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an array-like object,\n   *  else `false`.\n   * @example\n   *\n   * _.isArrayLikeObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isArrayLikeObject(document.body.children);\n   * // => true\n   *\n   * _.isArrayLikeObject('abc');\n   * // => false\n   *\n   * _.isArrayLikeObject(_.noop);\n   * // => false\n   */\n\n\n  function isArrayLikeObject(value) {\n    return isObjectLike(value) && isArrayLike(value);\n  }\n  /**\n   * Checks if `value` is a buffer.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.3.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n   * @example\n   *\n   * _.isBuffer(new Buffer(2));\n   * // => true\n   *\n   * _.isBuffer(new Uint8Array(2));\n   * // => false\n   */\n\n\n  var isBuffer = nativeIsBuffer || stubFalse;\n  /**\n   * Checks if `value` is classified as a `Function` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n   * @example\n   *\n   * _.isFunction(_);\n   * // => true\n   *\n   * _.isFunction(/abc/);\n   * // => false\n   */\n\n  function isFunction(value) {\n    if (!isObject(value)) {\n      return false;\n    } // The use of `Object#toString` avoids issues with the `typeof` operator\n    // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n    var tag = baseGetTag(value);\n    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n  }\n  /**\n   * Checks if `value` is a valid array-like length.\n   *\n   * **Note:** This method is loosely based on\n   * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n   * @example\n   *\n   * _.isLength(3);\n   * // => true\n   *\n   * _.isLength(Number.MIN_VALUE);\n   * // => false\n   *\n   * _.isLength(Infinity);\n   * // => false\n   *\n   * _.isLength('3');\n   * // => false\n   */\n\n\n  function isLength(value) {\n    return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n  }\n  /**\n   * Checks if `value` is the\n   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n   * @example\n   *\n   * _.isObject({});\n   * // => true\n   *\n   * _.isObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isObject(_.noop);\n   * // => true\n   *\n   * _.isObject(null);\n   * // => false\n   */\n\n\n  function isObject(value) {\n    var type = typeof value;\n    return value != null && (type == 'object' || type == 'function');\n  }\n  /**\n   * Checks if `value` is object-like. A value is object-like if it's not `null`\n   * and has a `typeof` result of \"object\".\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   * @example\n   *\n   * _.isObjectLike({});\n   * // => true\n   *\n   * _.isObjectLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isObjectLike(_.noop);\n   * // => false\n   *\n   * _.isObjectLike(null);\n   * // => false\n   */\n\n\n  function isObjectLike(value) {\n    return value != null && typeof value == 'object';\n  }\n  /**\n   * Checks if `value` is a plain object, that is, an object created by the\n   * `Object` constructor or one with a `[[Prototype]]` of `null`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.8.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   * }\n   *\n   * _.isPlainObject(new Foo);\n   * // => false\n   *\n   * _.isPlainObject([1, 2, 3]);\n   * // => false\n   *\n   * _.isPlainObject({ 'x': 0, 'y': 0 });\n   * // => true\n   *\n   * _.isPlainObject(Object.create(null));\n   * // => true\n   */\n\n\n  function isPlainObject(value) {\n    if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n      return false;\n    }\n\n    var proto = getPrototype(value);\n\n    if (proto === null) {\n      return true;\n    }\n\n    var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n    return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;\n  }\n  /**\n   * Checks if `value` is classified as a typed array.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n   * @example\n   *\n   * _.isTypedArray(new Uint8Array);\n   * // => true\n   *\n   * _.isTypedArray([]);\n   * // => false\n   */\n\n\n  var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n  /**\n   * Converts `value` to a plain object flattening inherited enumerable string\n   * keyed properties of `value` to own properties of the plain object.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {Object} Returns the converted plain object.\n   * @example\n   *\n   * function Foo() {\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.assign({ 'a': 1 }, new Foo);\n   * // => { 'a': 1, 'b': 2 }\n   *\n   * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n   * // => { 'a': 1, 'b': 2, 'c': 3 }\n   */\n\n  function toPlainObject(value) {\n    return copyObject(value, keysIn(value));\n  }\n  /**\n   * Creates an array of the own and inherited enumerable property names of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.keysIn(new Foo);\n   * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n   */\n\n\n  function keysIn(object) {\n    return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n  }\n  /**\n   * This method is like `_.merge` except that it accepts `customizer` which\n   * is invoked to produce the merged values of the destination and source\n   * properties. If `customizer` returns `undefined`, merging is handled by the\n   * method instead. The `customizer` is invoked with six arguments:\n   * (objValue, srcValue, key, object, source, stack).\n   *\n   * **Note:** This method mutates `object`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} sources The source objects.\n   * @param {Function} customizer The function to customize assigned values.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * function customizer(objValue, srcValue) {\n   *   if (_.isArray(objValue)) {\n   *     return objValue.concat(srcValue);\n   *   }\n   * }\n   *\n   * var object = { 'a': [1], 'b': [2] };\n   * var other = { 'a': [3], 'b': [4] };\n   *\n   * _.mergeWith(object, other, customizer);\n   * // => { 'a': [1, 3], 'b': [2, 4] }\n   */\n\n\n  var mergeWith = createAssigner(function (object, source, srcIndex, customizer) {\n    baseMerge(object, source, srcIndex, customizer);\n  });\n  /**\n   * Creates a function that returns `value`.\n   *\n   * @static\n   * @memberOf _\n   * @since 2.4.0\n   * @category Util\n   * @param {*} value The value to return from the new function.\n   * @returns {Function} Returns the new constant function.\n   * @example\n   *\n   * var objects = _.times(2, _.constant({ 'a': 1 }));\n   *\n   * console.log(objects);\n   * // => [{ 'a': 1 }, { 'a': 1 }]\n   *\n   * console.log(objects[0] === objects[1]);\n   * // => true\n   */\n\n  function constant(value) {\n    return function () {\n      return value;\n    };\n  }\n  /**\n   * This method returns the first argument it receives.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {*} value Any value.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   *\n   * console.log(_.identity(object) === object);\n   * // => true\n   */\n\n\n  function identity(value) {\n    return value;\n  }\n  /**\n   * This method returns `false`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.13.0\n   * @category Util\n   * @returns {boolean} Returns `false`.\n   * @example\n   *\n   * _.times(2, _.stubFalse);\n   * // => [false, false]\n   */\n\n\n  function stubFalse() {\n    return false;\n  }\n\n  module.exports = mergeWith;\n});\n/* eslint-disable no-multi-spaces */\n\nvar FormGuard = function FormGuard(_ref) {\n  var children = _ref.children,\n      dirty = _ref.dirty,\n      isvalid = _ref.isvalid;\n  return !isvalid && dirty === true && React.createElement('span', {\n    className: 'validation-error'\n  }, children);\n};\n\nvar defineProperty = function defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n/* eslint-disable brace-style */\n\n\nvar defaultValues = {\n  'checkbox': false,\n  'select-multiple': [],\n  'file-multiple': []\n};\n\nvar ValidatedForm = function ValidatedForm(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      id = _ref.id,\n      name = _ref.name,\n      onSubmit = _ref.onSubmit,\n      _ref$formVals = _ref.formVals,\n      formVals = _ref$formVals === undefined ? {} : _ref$formVals; // state consists of:\n  //  dirty: has the control been changed?\n  //  validated: set by FormGuard to true if the input is being watched\n  //  isvalid: true when all the conditions of all watching FormGuards are met\n\n  var stateBuffer = {};\n\n  var _useState = useState({}),\n      _useState2 = slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = useState(formVals),\n      _useState4 = slicedToArray(_useState3, 2),\n      vals = _useState4[0],\n      setFormVals = _useState4[1];\n\n  var formRef = useRef(null);\n  var managedChildren = injectProps(children);\n  var newState = Object.values(stateBuffer).filter(function (s) {\n    return Object.keys(s).length > 0;\n  }).length > 0;\n\n  if (newState) {\n    setState(mergeState(state, stateBuffer));\n  }\n\n  useEffect(invalidateForm, [vals]);\n  return React.createElement('form', {\n    className: className,\n    id: id,\n    name: name,\n    ref: formRef,\n    onSubmit: _onSubmit\n  }, managedChildren); // This function walks through the children recursively and\n  // replaces form elements with managed versions, and also passes\n  // current form element values to relevant FormGuards for validation\n\n  function injectProps() {\n    var childNodes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    return React.Children.map(childNodes, function (el, key) {\n      if (!el || !el.props) {\n        return el;\n      }\n\n      var children = el.props.children,\n          type = el.type;\n      var injected = injectProps(children);\n      var hasChildren = injected.length > 0;\n      var isFormElement = ['input', 'select', 'textarea'].includes(type);\n      var isGuard = type === FormGuard;\n\n      if (isFormElement) {\n        return handleFormElement(el, key);\n      } else if (isGuard) {\n        return handleFormGuard(el, key);\n      } else if (hasChildren) {\n        return cloneElement(el, {}, injected);\n      } else {\n        return el;\n      }\n    });\n\n    function handleFormElement(el, key) {\n      function getNormalizedType(el) {\n        var multiple = el.props.multiple;\n        var select = el.type === 'select',\n            file = el.type === 'file';\n\n        if (select && multiple) {\n          return 'select-multiple';\n        } else if (file && multiple) {\n          return 'file-multiple';\n        } else {\n          return el.props.type || el.type;\n        }\n      }\n\n      function determineValue(el, name, type) {\n        var value = vals[name] || el.props.value || defaultValues[type] || '';\n\n        if (type === 'radio') {\n          return el.props.value;\n        } else if (type.substr(0, 4) === 'file') {\n          return undefined;\n        } else {\n          return value;\n        }\n      }\n\n      var name = el.props.name;\n      var type = getNormalizedType(el);\n      var value = determineValue(el, name, type);\n\n      var onChange = function onChange(e) {\n        return _onChange(e, el.props.onChange);\n      };\n\n      var invalid = state[name] && state[name].isvalid === false;\n      var className = invalid && isDirty(name) ? el.props.className + ' input-invalid' : el.props.className;\n      return ['submit', 'image', 'reset'].includes(type) ? el : cloneElement(el, {\n        key: key,\n        className: className,\n        value: value,\n        onChange: onChange\n      });\n    }\n\n    function handleFormGuard(el, key) {\n      var validatesWith = el.props.validatesWith;\n      var watches = asArray(el.props.watches);\n      var value = watches.map(function (name) {\n        return vals[name] || '';\n      });\n      var isvalid = !!validatesWith.apply(null, value);\n      var dirty = watches.reduce(function (groupDirty, name) {\n        stateBuffer[name] = stateBuffer[name] || {};\n        var curState = mergeState(state[name], stateBuffer[name]);\n        var curStateEmpty = Object.keys(curState).length === 0;\n        var markValid = isvalid && curState.isvalid === undefined;\n        var invalidate = !isvalid && curState.isvalid !== false;\n\n        if (curStateEmpty || !curState.validated) {\n          stateBuffer[name].validated = true;\n        }\n\n        if (invalidate || markValid) {\n          stateBuffer[name].isvalid = isvalid;\n        }\n\n        return groupDirty || curState.dirty === true;\n      }, false); // If any in the group are dirty it makes the whole group dirty\n\n      stateBuffer = _extends({}, stateBuffer, watches.reduce(function (acc, name) {\n        return _extends({}, acc, defineProperty({}, name, isDirty(name) === dirty ? stateBuffer[name] : _extends({}, stateBuffer[name], {\n          dirty: dirty\n        })));\n      }, {}));\n      return cloneElement(el, {\n        key: key,\n        value: value,\n        dirty: dirty,\n        isvalid: isvalid\n      });\n    }\n  }\n\n  function mergeState(state1, state2) {\n    return lodash_mergewith(state1, state2, function (v1, v2, k) {\n      return k === 'isvalid' ? v1 && v2 : undefined;\n    });\n  }\n\n  function _onSubmit(e) {\n    e.preventDefault();\n    formIsValid() ? onSubmit(e, vals, resetForm) : setFormDirty();\n  }\n\n  function _onChange(e) {\n    var onChange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value,\n        checked = _e$target.checked,\n        options = _e$target.options,\n        files = _e$target.files,\n        type = _e$target.type;\n\n    if (type === 'checkbox') {\n      value = checked;\n    } else if (type === 'select' || type === 'select-multiple') {\n      value = Array.from(options).filter(function (o) {\n        return o.selected;\n      }).map(function (o) {\n        return o.value;\n      });\n    } else if (type === 'file' || type === 'file-multiple') {\n      value = files;\n    }\n\n    if (!isDirty(name)) {\n      updateState(name, {\n        dirty: true\n      });\n    }\n\n    setFormVal(name, value);\n    onChange(e);\n  }\n\n  function resetForm() {\n    formRef.current.reset();\n    setState({});\n    setFormVals({});\n  }\n\n  function updateState(name, st) {\n    setState(lodash_mergewith(state, defineProperty({}, name, st)));\n  }\n\n  function setFormVal(name, val) {\n    setFormVals(_extends({}, vals, defineProperty({}, name, val)));\n  }\n\n  function setStateValueForAllElements(key, val) {\n    setState(Object.entries(state).reduce(function (acc, _ref2) {\n      var _ref3 = slicedToArray(_ref2, 2),\n          name = _ref3[0],\n          controlState = _ref3[1];\n\n      return _extends({}, acc, defineProperty({}, name, _extends({}, controlState, defineProperty({}, key, val))));\n    }, {}));\n  }\n\n  function setFormDirty() {\n    setStateValueForAllElements('dirty', true);\n  }\n\n  function invalidateForm() {\n    setStateValueForAllElements('isvalid', undefined);\n  }\n\n  function isDirty(name) {\n    return stateBuffer[name] && stateBuffer[name].dirty || state[name] && state[name].dirty;\n  }\n\n  function formIsValid() {\n    return Object.values(state).filter(function (s) {\n      return s.validated && !s.isvalid;\n    }).length === 0;\n  }\n};\n\nexport { ValidatedForm, FormGuard, validators, EMAIL_REGEX, PHONE_REGEX };","import React from 'react';\nimport { ValidatedForm, FormGuard, validators } from 'react-formguards'\n\nconst ExampleBasic = () => {\n  return (\n    <ValidatedForm onSubmit={(e, formVals) => console.log(formVals)}>\n      <label htmlFor='example1-name'>Name:</label>\n      <input type='text' name='name' id='example1-name' />\n\n      <label htmlFor='example1-email'>Email:</label>\n      <FormGuard watches='email' validatesWith={validators.required} >\n                Email is required\n      </FormGuard>\n      <FormGuard watches='email' validatesWith={validators.email} >\n                Please enter a valid email address\n      </FormGuard>\n      <input type='email' name='email' id='example1-email' />\n\n      <label htmlFor='example1-phone'>Telephone:</label>\n      <FormGuard watches='phone' validatesWith={validators.phone} >\n                Please enter a valid phone number\n      </FormGuard>\n      <input type='tel' name='phone' id='example1-phone' />\n\n      <label htmlFor='example1-comments'>Comments:</label>\n      <FormGuard watches='comments' validatesWith={validators.maxLength(80)} >\n                Maximum length (80 characters) exceeded\n      </FormGuard>\n      <textarea name='comments' id='example1-comments' />\n\n      <FormGuard watches='radioButtons' validatesWith={validators.required} >\n                Pick One!\n      </FormGuard>\n      <input type='radio' name='radioButtons' value='Radio 1' id='example1-radioButtons1' />\n      <label htmlFor='example1-radioButtons1'>Radio 1</label>\n      <input type='radio' name='radioButtons' value='Radio 2' id='example1-radioButtons2' />\n      <label htmlFor='example1-radioButtons2'>Radio 2</label>\n      <input type='radio' name='radioButtons' value='Radio 3' id='example1-radioButtons3' />\n      <label htmlFor='example1-radioButtons3'>Radio 3</label>\n\n      <br />\n      <FormGuard\n        watches={['checkBox1', 'checkBox2', 'checkBox3']}\n        validatesWith={(cb1, cb2, cb3) => { return cb1 || cb2 || cb3}} >\n                Pick One!\n      </FormGuard>\n      <input type='checkbox' name='checkBox1' id='example1-checkbox1' />\n      <label htmlFor='example1-checkbox1'>Check 1</label>\n      <input type='checkbox' name='checkBox2' id='example1-checkbox2' />\n      <label htmlFor='example1-checkbox2'>Check 2</label>\n      <input type='checkbox' name='checkBox3' id='example1-checkbox3' />\n      <label htmlFor='example1-checkbox3'>Check 3</label>\n\n      <input type='submit' value='Check the console for onSubmit' />\n    </ValidatedForm>\n  );\n}\n\nexport default ExampleBasic;\n","import React from 'react';\nimport { ValidatedForm, FormGuard } from 'react-formguards'\n\nconst ExampleFunction = () => {\n  return (\n    <ValidatedForm onSubmit={(e, formVals) => console.log(formVals)}>\n\n      <label htmlFor='example2-fzappa'>Must be Frank Zappa:</label>\n      <FormGuard watches='fzappa' validatesWith={val => val === 'Frank Zappa'} >\n                Value must be \"Frank Zappa\"\n      </FormGuard>\n      <input type='text' name='fzappa' id='example2-fzappa' />\n\n      <input type='submit' value='Check the console for onSubmit' />\n    </ValidatedForm>\n  );\n}\n\nexport default ExampleFunction;\n","import React from 'react';\nimport { ValidatedForm, FormGuard } from 'react-formguards'\n\nconst ExampleMultipleWatches = () => {\n  function validateTwoInputs (input1, input2) {\n    return (input1 && input1.length > 0) ||\n               (input2 && input2.length > 0);\n  }\n\n  return (\n    <ValidatedForm onSubmit={(e, formVals) => console.log(formVals)}>\n\n      <label htmlFor='example3-input1'>Input 1:</label>\n      <input type='text' name='input1' id='example3-input1' />\n\n      <FormGuard\n        watches={['input1', 'input2']}\n        validatesWith={validateTwoInputs} >\n\n                Either input 1 OR input 2 is required.\n      </FormGuard>\n\n      <label htmlFor='example3-input2'>Input 2:</label>\n      <input type='text' name='input2' id='example3-input2' />\n\n      <input type='submit' value='Check the console for onSubmit' />\n    </ValidatedForm>\n  );\n}\n\nexport default ExampleMultipleWatches;\n","/* eslint-disable indent */\nimport React from 'react';\nimport { ValidatedForm, FormGuard, validators } from 'react-formguards'\n\nconst ExampleStyle = () => {\n    return (\n      <ValidatedForm id='example-style' onSubmit={(e, formVals) => console.log(formVals)}>\n\n        <label htmlFor='example1-email'>Email:</label>\n        <FormGuard watches='email' validatesWith={validators.required} >\n                Email is required\n        </FormGuard>\n        <FormGuard watches='email' validatesWith={validators.email} >\n                Please enter a valid email address\n        </FormGuard>\n        <input type='email' name='email' id='example1-email' />\n\n        <input type='submit' value='Check the console for onSubmit' />\n      </ValidatedForm>\n    );\n}\n\nexport default ExampleStyle;\n","import React from 'react';\nimport { ValidatedForm, FormGuard, validators } from 'react-formguards'\n\nconst ExampleValues = () => {\n  const formVals = {\n    name: 'Emmett Brown',\n    email: 'doc@example.org',\n    phone: '555 555 5555',\n    comments: 'Great Scott!!'\n  };\n\n  return (\n    <ValidatedForm formVals={formVals} onSubmit={(e, formVals) => console.log(formVals)}>\n      <label htmlFor='example1-name'>Name:</label>\n      <input type='text' name='name' id='example1-name' />\n\n      <label htmlFor='example1-email'>Email:</label>\n      <FormGuard watches='email' validatesWith={validators.required} >\n                Email is required\n      </FormGuard>\n      <FormGuard watches='email' validatesWith={validators.email} >\n                Please enter a valid email address\n      </FormGuard>\n      <input type='email' name='email' id='example1-email' />\n\n      <label htmlFor='example1-phone'>Telephone:</label>\n      <FormGuard watches='phone' validatesWith={validators.phone} >\n                Please enter a valid phone number\n      </FormGuard>\n      <input type='tel' name='phone' id='example1-phone' />\n\n      <label htmlFor='example1-comments'>Comments:</label>\n      <FormGuard watches='comments' validatesWith={validators.maxLength(80)} >\n                Maximum length (80 characters) exceeded\n      </FormGuard>\n      <textarea name='comments' id='example1-comments' />\n\n      <input type='submit' value='Check the console for onSubmit' />\n    </ValidatedForm>\n  );\n}\n\nexport default ExampleValues;\n","import React from 'react';\nimport { ValidatedForm, FormGuard, validators } from 'react-formguards'\n\nconst ExampleBenchmark = () => {\n  return (\n    <ValidatedForm onSubmit={(e, formVals) => console.log(formVals)}>\n\n      {[...Array(200).keys()].map(idx =>\n        <div key={idx}>\n          <label htmlFor={`example2-input-${idx}`}>Label {idx}:</label>\n          <FormGuard watches={`input-${idx}`} validatesWith={validators.required} >\n                Value is Required\n          </FormGuard>\n          <input type='text' name={`input-${idx}`} id={`example6-input-${idx}`} />\n        </div>\n      )}\n      <input type='submit' value='Check the console for onSubmit' />\n    </ValidatedForm>\n  );\n}\n\nexport default ExampleBenchmark;\n","import React from 'react'\nimport ExampleBasic from './examples/example-basic';\nimport ExampleFunction from './examples/example-function';\nimport ExampleMultipleWatches from './examples/example-multiple-watches';\nimport ExampleStyle from './examples/example-style';\nimport ExampleValues from './examples/example-values';\nimport ExampleBenchmark from './examples/example-benchmark';\n\nconst App = () => {\n  return (\n    <>\n      <section>\n        <h1>react-formguards</h1>\n        <h3>A simple, declarative approach to client side validation.</h3>\n        <span><a href='https://www.npmjs.com/package/react-formguards'>npm</a> | <a href='https://github.com/NuclearHorseStudios/react-formguards'>github</a></span>\n\n        <div className='example'>\n          <div className='example-code'>\n            <h2>Basic Validation</h2>\n            <a href='https://github.com/NuclearHorseStudios/react-formguards/blob/master/example/src/examples/example-basic.jsx'>Source</a>\n            <ol>\n              <li>\n                Just write your form like normal, replacing your &lt;form&gt; tag with a &lt;ValidatedForm&gt; tag.  Pass it an onSubmit function.\n              </li>\n              <li>\n                Then add &lt;FormGuard&gt; tags anywhere you'd like a validation error to show up. <br /> Each &lt;FormGuard&gt; tag:\n                <ul>\n                  <li>Watches specified input(s) and validates as needed</li>\n                  <li>Becomes a &lt;span&gt; in the DOM when the error shows</li>\n                  <li>onSubmit won't be called until all the FormGuard's are satisfied</li>\n                </ul>\n\n                <p>Some basic validators are included -- required, email, phone, maxLength, and minLength</p>\n              </li>\n            </ol>\n            <pre>{`\n  <ValidatedForm onSubmit={(e, formVals) => console.log(formVals)}>\n    <label htmlFor='example1-name'>Name:</label>\n    <input type='text' name='name' id='example1-name' />\n\n    <label htmlFor='example1-email'>Email:</label>\n    <FormGuard watches='email' validatesWith={validators.required} >\n              Email is required\n    </FormGuard>\n    <FormGuard watches='email' validatesWith={validators.email} >\n              Please enter a valid email address\n    </FormGuard>\n    <input type='email' name='email' id='example1-email' />\n\n    <label htmlFor='example1-phone'>Telephone:</label>\n    <FormGuard watches='phone' validatesWith={validators.phone} >\n              Please enter a valid phone number\n    </FormGuard>\n    <input type='tel' name='phone' id='example1-phone' />\n\n    <label htmlFor='example1-comments'>Comments:</label>\n    <FormGuard watches='comments' validatesWith={validators.maxLength(80)} >\n              Maximum length (80 characters) exceeded\n    </FormGuard>\n    <textarea name='comments' id='example1-comments' />\n\n    <FormGuard watches='radioButtons' validatesWith={validators.required} >\n              Pick One!\n    </FormGuard>\n    <input type='radio' name='radioButtons' value='Radio 1' id='example1-radioButtons1' />\n    <label htmlFor='example1-radioButtons1'>Radio 1</label>\n    <input type='radio' name='radioButtons' value='Radio 2' id='example1-radioButtons2' />\n    <label htmlFor='example1-radioButtons2'>Radio 2</label>\n    <input type='radio' name='radioButtons' value='Radio 3' id='example1-radioButtons3' />\n    <label htmlFor='example1-radioButtons3'>Radio 3</label>\n\n    <br />\n    <FormGuard\n      watches={['checkBox1', 'checkBox2', 'checkBox3']}\n      validatesWith={(cb1, cb2, cb3) => { return cb1 || cb2 || cb3}} >\n              Pick One!\n    </FormGuard>\n    <input type='checkbox' name='checkBox1' id='example1-checkbox1' />\n    <label htmlFor='example1-checkbox1'>Check 1</label>\n    <input type='checkbox' name='checkBox2' id='example1-checkbox2' />\n    <label htmlFor='example1-checkbox2'>Check 2</label>\n    <input type='checkbox' name='checkBox3' id='example1-checkbox3' />\n    <label htmlFor='example1-checkbox3'>Check 3</label>\n\n    <input type='submit' value='Check the console for onSubmit' />\n  </ValidatedForm>\n          `}\n            </pre>\n          </div>\n          <div className='example-implementation'>\n            <ExampleBasic />\n          </div>\n        </div>\n\n        <div className='example'>\n          <div className='example-code'>\n            <h2>Custom Validation Functions</h2>\n            <a href='https://github.com/NuclearHorseStudios/react-formguards/blob/master/example/src/examples/example-function.jsx'>Source</a>\n            <p>Just pass a function to validatesWith to use your own validation functions.</p>\n            <pre>\n              {`\n    <ValidatedForm onSubmit={(e, formVals) => console.log(formVals)}>\n\n      <label htmlFor='example2-fzappa'>Must be Frank Zappa:</label>\n      <FormGuard watches='fzappa' validatesWith={ val => val === 'Frank Zappa' } >\n          Value must be \"Frank Zappa\"\n      </FormGuard> \n      <input type='text' name='fzappa' id='example2-fzappa' />  \n      \n      <input type='submit' value='Check the console for onSubmit' />\n    </ValidatedForm>\n            `}\n            </pre>\n          </div>\n          <div className='example-implementation'>\n            <ExampleFunction />\n          </div>\n        </div>\n\n        <div className='example'>\n          <div className='example-code'>\n            <h2>Guarding Multiple Form Elements with one FormGuard</h2>\n            <a href='https://github.com/NuclearHorseStudios/react-formguards/blob/master/example/src/examples/example-multiple-watches.jsx'>Source</a>\n            <p>A FormGuard can watch multiple elements by passing an array to the <i>watches</i> prop</p>\n            <p>In this example the <i>validateTwoInputs</i> function requires that either <i>input1</i> OR <i>input2</i> is filled in.</p>\n            <pre>\n              {`\n    function validateTwoInputs (input1, input2) {\n      return (input1 && input1.length > 0) || \n             (input2 && input2.length > 0);\n    }\n\n    [...]\n\n    <ValidatedForm onSubmit={(e, formVals) => console.log(formVals)}>\n\n      <label htmlFor='example3-input1'>Input 1:</label>\n      <input type='text' name='input1' id='example3-input1' />  \n\n      <FormGuard \n          watches={['input1', 'input2']} \n          validatesWith={validateTwoInputs} >\n          \n          Either input 1 OR input 2 is required.\n      </FormGuard> \n\n      <label htmlFor='example3-input2'>Input 2:</label>\n      <input type='text' name='input2' id='example3-input2' />  \n\n      <input type='submit' value='Check the console for onSubmit' />\n    </ValidatedForm>\n            `}\n            </pre>\n          </div>\n          <div className='example-implementation'>\n            <ExampleMultipleWatches />\n          </div>\n        </div>\n\n        <div className='example'>\n          <div className='example-code'>\n            <h2>Styling / CSS</h2>\n            <a href='https://github.com/NuclearHorseStudios/react-formguards/blob/master/example/src/examples/example-style.jsx'>Source</a>\n            <p>react-formguards will add the css class 'input-invalid' to form controls that are invalid.</p>\n            <p>The span that displays a FormGuard error text will have the css class 'validation-error'</p>\n            <pre>\n              {`\n    \n    .input-invalid {\n      outline: 3px solid #0000ff;\n    }\n\n    span.validation-error {\n      float: right;\n      font-weight: bold;\n      color: #00ff00;\n    }\n\n    <ValidatedForm onSubmit={(e, formVals) => console.log(formVals)}>\n\n      <label htmlFor='example4-email'>Email:</label>\n      <FormGuard watches='email' validatesWith={validators.required} >\n          Email is required  \n      </FormGuard> \n      <FormGuard watches='email' validatesWith={validators.email} >\n          Please enter a valid email address  \n      </FormGuard> \n      <input type='email' name='email' id='example4-email' />  \n      \n      <input type='submit' value='Check the console for onSubmit' />\n    </ValidatedForm>\n            `}\n            </pre>\n          </div>\n          <div className='example-implementation'>\n            <ExampleStyle />\n          </div>\n        </div>\n\n        <div className='example'>\n          <div className='example-code'>\n            <h2>Passing Preset Values</h2>\n            <a href='https://github.com/NuclearHorseStudios/react-formguards/blob/master/example/src/examples/example-values.jsx'>Source</a>\n            <p>Just pass an object as the formVals prop to preset values in the form.</p>\n            <pre>\n              {`\n    const formVals = {\n      name: 'Emmett Brown',\n      email: 'doc@example.org',\n      phone: '555 555 5555',\n      comments: 'Great Scott!!'\n    };\n\n    [...]\n\n    <ValidatedForm formVals={formVals} onSubmit={(e, formVals) => console.log(formVals)}>\n      <label htmlFor='example1-name'>Name:</label>\n      <input type='text' name='name' id='example1-name' />\n\n      <label htmlFor='example1-email'>Email:</label>\n      <FormGuard watches='email' validatesWith={validators.required} >\n          Email is required  \n      </FormGuard> \n      <FormGuard watches='email' validatesWith={validators.email} >\n          Please enter a valid email address  \n      </FormGuard> \n      <input type='email' name='email' id='example1-email' />  \n      \n      <label htmlFor='example1-phone'>Telephone:</label>\n      <FormGuard watches='phone' validatesWith={validators.phone} >\n          Please enter a valid phone number  \n      </FormGuard> \n      <input type='tel' name='phone' id='example1-phone' />  \n\n      <label htmlFor='example1-comments'>Comments:</label>\n      <FormGuard watches='comments' validatesWith={validators.maxLength(80)} >\n          Maximum length (80 characters) exceeded\n      </FormGuard> \n      <textarea name='comments' id='example1-comments' />  \n      \n      <input type='submit' value='Check the console for onSubmit' />\n    </ValidatedForm>\n            `}\n            </pre>\n          </div>\n          <div className='example-implementation'>\n            <ExampleValues />\n          </div>\n        </div>\n\n        <div className='example'>\n          <div className='example-code'>\n            <h2>Large Forms</h2>\n            <a href='https://github.com/NuclearHorseStudios/react-formguards/blob/master/example/src/examples/example-benchmark.jsx'>Source</a>\n            <p>react-formguards handles large forms as well.  Here is a contrived exmaple with 200, individually validated, input boxes.</p>\n            <pre>\n              {`\n    <ValidatedForm onSubmit={(e, formVals) => console.log(formVals)}>\n\n    {[...Array(200).keys()].map(idx =>\n      <div key={idx}>\n        <label htmlFor={\\`example2-input-\\${idx}\\`}>Label {idx}:</label>\n        <FormGuard watches={\\`input-\\${idx}\\`} validatesWith={validators.required} >\n              Value is Required\n        </FormGuard>\n        <input type='text' name={\\`input-\\${idx}\\`} id={\\`example6-input-\\${idx}\\`} />\n      </div>\n    )}\n    <input type='submit' value='Check the console for onSubmit' />\n  </ValidatedForm>\n            `}\n            </pre>\n          </div>\n          <div className='example-implementation'>\n            <details>\n              <summary>Click to see example.  </summary>\n              <p>\n                <ExampleBenchmark />\n              </p>\n            </details>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}