{"version":3,"sources":["../../dist/index.es.js","examples/example-basic.jsx","examples/example-function.jsx","examples/example-multiple-watches.jsx","examples/example-style.jsx","examples/example-values.jsx","App.js","index.js"],"names":["classnames","fn","module","exports","createCommonjsModule","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","default","window","defineProperty","obj","value","Object","enumerable","configurable","writable","_extends","assign","target","source","prototype","slicedToArray","arr","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","sliceIterator","TypeError","toConsumableArray","arr2","from","formTypes","defaultValues","checkbox","select-multiple","file-multiple","index_es_ValidatedForm","props","children","className","id","name","onSubmit","_props$formVals","formVals","_useState","react","_useState2","state","setState","_useState3","_useState4","vals","setFormVals","resetForm","mergeState","st","setFormVal","val","newVals","entries","reduce","acc","_ref2","_ref3","invalid","_ref6","_ref7","isvalid","react_default","a","createElement","e","preventDefault","values","cState","validated","formIsValid","dirty","_ref4","_ref5","injectProps","nodes","Children","map","el","type","isFormElement","includes","isGuard","index_es_FormGuard","_el$props","_onChange2","onChange","_ref","multiple","getNormalizedType","propsVal","getDefaultValue","getValue","inputInvalid","isSubmissionType","cloneElement","onBlur","onClick","onFocus","onSelect","input-invalid","_e$target","options","files","checked","selected","option","concat","_onChange","handleFormElement","watches","forEach","handleFormGuard","_ref8","_ref8$state","validatesWith","isDirty","watch","markValid","validators","phone","PHONE_REGEX","test","email","EMAIL_REGEX","minLength","len","maxLength","required","keys","ExampleBasic","console","log","htmlFor","ExampleFunction","ExampleMultipleWatches","input1","input2","ExampleStyle","ExampleValues","comments","App","Fragment","href","example_basic","example_function","example_multiple_watches","example_style","example_values","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.04d9c03e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar classnames = createCommonjsModule(function (module) {\n  /*!\n    Copyright (c) 2017 Jed Watson.\n    Licensed under the MIT License (MIT), see\n    http://jedwatson.github.io/classnames\n  */\n\n  /* global define */\n  (function () {\n    var hasOwn = {}.hasOwnProperty;\n\n    function classNames() {\n      var classes = [];\n\n      for (var i = 0; i < arguments.length; i++) {\n        var arg = arguments[i];\n        if (!arg) continue;\n        var argType = typeof arg;\n\n        if (argType === 'string' || argType === 'number') {\n          classes.push(arg);\n        } else if (Array.isArray(arg) && arg.length) {\n          var inner = classNames.apply(null, arg);\n\n          if (inner) {\n            classes.push(inner);\n          }\n        } else if (argType === 'object') {\n          for (var key in arg) {\n            if (hasOwn.call(arg, key) && arg[key]) {\n              classes.push(key);\n            }\n          }\n        }\n      }\n\n      return classes.join(' ');\n    }\n\n    if (module.exports) {\n      classNames.default = classNames;\n      module.exports = classNames;\n    } else {\n      window.classNames = classNames;\n    }\n  })();\n});\n\nvar defineProperty = function defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar toConsumableArray = function toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n/* eslint-disable padded-blocks */\n\n\nvar formTypes = ['input', 'select', 'textarea'];\nvar defaultValues = {\n  'checkbox': false,\n  'select-multiple': [],\n  'file-multiple': []\n};\n\nvar ValidatedForm = function ValidatedForm(props) {\n  var children = props.children,\n      className = props.className,\n      id = props.id,\n      name = props.name,\n      onSubmit = props.onSubmit,\n      _props$formVals = props.formVals,\n      formVals = _props$formVals === undefined ? {} : _props$formVals;\n\n  var _useState = useState({}),\n      _useState2 = slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = useState(formVals),\n      _useState4 = slicedToArray(_useState3, 2),\n      vals = _useState4[0],\n      setFormVals = _useState4[1];\n\n  useEffect(function () {\n    invalidateForm();\n  }, [vals]);\n\n  function _onSubmit(e) {\n    e.preventDefault();\n\n    if (!formIsValid()) {\n      setFormDirty();\n    } else {\n      onSubmit(e, vals, resetForm);\n    }\n  }\n\n  function resetForm() {\n    setState({});\n    setFormVals({});\n  }\n\n  function injectProps() {\n    var nodes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    return React.Children.map(nodes, function (el, key) {\n      if (!el || !el.props) {\n        return el;\n      }\n\n      var props = el.props,\n          type = el.type;\n      var children = props.children ? injectProps(props.children) : [];\n      var isFormElement = formTypes.includes(type);\n      var isGuard = type === FormGuard;\n\n      if (isFormElement) {\n        return handleFormElement(el, key);\n      } else if (isGuard) {\n        return handleFormGuard(el, key);\n      } else {\n        return React.cloneElement(el, {}, children);\n      }\n    });\n\n    function handleFormElement(el, key) {\n      function getNormalizedType(el) {\n        if (el.type === 'select' && el.props.multiple) {\n          return 'select-multiple';\n        } else if (el.props.type === 'file' && el.props.multiple) {\n          return 'file-multiple';\n        } else {\n          return el.props.type || el.type;\n        }\n      }\n\n      function getDefaultValue(type) {\n        return defaultValues[type] === undefined ? '' : defaultValues[type];\n      }\n\n      function getValue(type, propsVal, name) {\n        switch (type) {\n          case 'radio':\n            return propsVal;\n\n          case 'file-multiple':\n          case 'file':\n            return undefined;\n\n          default:\n            return vals[name] || propsVal || getDefaultValue(type);\n        }\n      }\n\n      var _el$props = el.props,\n          name = _el$props.name,\n          _onChange2 = _el$props.onChange;\n\n      var _ref = state[name] || {},\n          isvalid = _ref.isvalid,\n          dirty = _ref.dirty;\n\n      var type = getNormalizedType(el);\n      var value = getValue(type, el.props.value, name);\n      var inputInvalid = isvalid !== undefined && !isvalid && dirty;\n      var isSubmissionType = ['submit', 'image', 'reset'].includes(type);\n      var classes = el.props.className;\n\n      if (isSubmissionType) {\n        return el;\n      } else {\n        // Initial value was set with value prop\n        if (!dirty && type !== 'radio' && !vals[name] && value) {\n          setFormVal(name, value);\n        }\n\n        return React.cloneElement(el, {\n          onBlur: el.props.onBlur,\n          onClick: el.props.onClick,\n          onFocus: el.props.onFocus,\n          onSelect: el.props.onSelect,\n          className: classnames(classes, {\n            'input-invalid': inputInvalid\n          }),\n          onChange: function onChange(e) {\n            return _onChange(e, _onChange2);\n          },\n          value: value,\n          key: key\n        });\n      }\n    }\n\n    function handleFormGuard(el, key) {\n      var watches = !Array.isArray(el.props.watches) ? [el.props.watches] : el.props.watches;\n      var value = watches.map(function (name) {\n        return vals[name] || '';\n      });\n      watches.forEach(function (name) {\n        if (!state[name] || !state[name].validated) {\n          mergeState(name, {\n            validated: true\n          });\n        }\n      });\n      return React.cloneElement(el, {\n        state: state,\n        key: key,\n        mergeState: mergeState,\n        value: value\n      });\n    }\n  }\n\n  function _onChange(e) {\n    var onChange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value,\n        options = _e$target.options,\n        files = _e$target.files,\n        checked = _e$target.checked,\n        type = _e$target.type;\n\n    if (type === 'checkbox') {\n      // A checkbox will pass the *current* state on change as string on click\n      if (value === 'true') {\n        value = false;\n      } else if (value === 'false') {\n        value = true;\n      } else if (!checked) {\n        value = undefined;\n      }\n    } else if (type === 'select' || type === 'select-multiple') {\n      value = Array.from(options).reduce(function (selected, option) {\n        return option.selected ? [].concat(toConsumableArray(selected), [option.value]) : selected;\n      }, []);\n    } else if (type === 'file') {\n      value = files;\n    }\n\n    if (state[name] && state[name].dirty !== true) {\n      mergeState(name, {\n        dirty: true\n      });\n    }\n\n    setFormVal(name, value);\n    onChange(e);\n  }\n\n  function mergeState(name, st) {\n    setState(_extends({}, state, defineProperty({}, '' + name, _extends({}, state[name], st))));\n  }\n\n  function setFormVal(name, val) {\n    if (val === undefined) {\n      // delete vals[name]; this might be cleaner, even w/ mutation\n      var newVals = Object.entries(vals).reduce(function (acc, _ref2) {\n        var _ref3 = slicedToArray(_ref2, 2),\n            key = _ref3[0],\n            val = _ref3[1];\n\n        return key === name ? acc : _extends({}, acc, defineProperty({}, '' + key, val));\n      });\n      setFormVals(newVals);\n    } else {\n      setFormVals(_extends({}, vals, defineProperty({}, '' + name, val)));\n    }\n  }\n\n  function formIsValid() {\n    var entries = Object.values(state);\n    return entries.length === 0 || !entries.reduce(function (invalid, cState) {\n      return invalid || cState.validated && !cState.isvalid;\n    }, false);\n  }\n\n  function setFormDirty() {\n    setState(Object.entries(state).reduce(function (dirty, _ref4) {\n      var _ref5 = slicedToArray(_ref4, 2),\n          name = _ref5[0],\n          cState = _ref5[1];\n\n      return _extends({}, dirty, defineProperty({}, '' + name, _extends({}, cState, {\n        dirty: true\n      })));\n    }, {}));\n  }\n\n  function invalidateForm() {\n    setState(Object.entries(state).reduce(function (invalid, _ref6) {\n      var _ref7 = slicedToArray(_ref6, 2),\n          name = _ref7[0],\n          st = _ref7[1];\n\n      return _extends({}, invalid, defineProperty({}, '' + name, _extends({}, st, {\n        isvalid: undefined\n      })));\n    }, {}));\n  }\n\n  return React.createElement('form', _extends({\n    className: className,\n    id: id,\n    name: name\n  }, {\n    onSubmit: _onSubmit\n  }), injectProps(children));\n};\n\nvar FormGuard = function FormGuard(_ref8) {\n  var children = _ref8.children,\n      watches = _ref8.watches,\n      _ref8$state = _ref8.state,\n      state = _ref8$state === undefined ? {} : _ref8$state,\n      mergeState = _ref8.mergeState,\n      validatesWith = _ref8.validatesWith,\n      value = _ref8.value;\n  var isvalid = !!validatesWith.apply(null, value);\n  var isDirty = false;\n\n  if (!Array.isArray(watches)) {\n    watches = [watches];\n  }\n\n  watches.forEach(function (watch) {\n    var st = state[watch];\n    var markValid = isvalid && st && st.isvalid === undefined;\n    var invalidate = !isvalid && st && st.isvalid !== false;\n\n    if (invalidate || markValid) {\n      mergeState(watch, {\n        isvalid: isvalid\n      });\n    }\n\n    isDirty = isDirty || st && st.dirty;\n  });\n  return !isvalid && isDirty === true && React.createElement('span', {\n    className: 'validation-error'\n  }, children);\n};\n\nvar validators = {\n  phone: function phone() {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return PHONE_REGEX.test(value);\n  },\n  email: function email() {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return EMAIL_REGEX.test(value);\n  },\n  minLength: function minLength(len) {\n    return function () {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      return value.length >= len;\n    };\n  },\n  maxLength: function maxLength(len) {\n    return function () {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      return value.length <= len;\n    };\n  },\n  required: function required() {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return typeof value === 'number' || value !== null && value !== undefined && value.length !== 0 && Object.keys(value).length !== 0 && value !== '';\n  }\n};\nvar EMAIL_REGEX = /^$|(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\nvar PHONE_REGEX = /^$|^(\\+\\d{1,3})?\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4})$/;\nexport { ValidatedForm, FormGuard, validators, EMAIL_REGEX, PHONE_REGEX };","import React from 'react';\nimport { ValidatedForm, FormGuard, validators } from 'react-formguards'\n\nconst ExampleBasic = () => {\n\n    return (\n        <ValidatedForm onSubmit={(e, formVals) => console.log(formVals)}>\n            <label htmlFor='example1-name'>Name:</label>\n            <input type='text' name='name' id='example1-name' />\n\n            <label htmlFor='example1-email'>Email:</label>\n            <FormGuard watches='email' validatesWith={validators.required} >\n                Email is required  \n            </FormGuard> \n            <FormGuard watches='email' validatesWith={validators.email} >\n                Please enter a valid email address  \n            </FormGuard> \n            <input type='email' name='email' id='example1-email' />  \n            \n            <label htmlFor='example1-phone'>Telephone:</label>\n            <FormGuard watches='phone' validatesWith={validators.phone} >\n                Please enter a valid phone number  \n            </FormGuard> \n            <input type='tel' name='phone' id='example1-phone' />  \n\n            <label htmlFor='example1-comments'>Comments:</label>\n            <FormGuard watches='comments' validatesWith={validators.maxLength(80)} >\n                Maximum length (80 characters) exceeded\n            </FormGuard> \n            <textarea name='comments' id='example1-comments' />  \n\n            <FormGuard watches='radioButtons' validatesWith={validators.required} >\n                Pick One!  \n            </FormGuard> \n            <input type='radio' name='radioButtons' value='Radio 1' id='example1-radioButtons1' />  \n            <label htmlFor='example1-radioButtons1'>Radio 1</label>\n            <input type='radio' name='radioButtons' value='Radio 2' id='example1-radioButtons2' />  \n            <label htmlFor='example1-radioButtons2'>Radio 2</label>\n            <input type='radio' name='radioButtons' value='Radio 3' id='example1-radioButtons3' />  \n            <label htmlFor='example1-radioButtons3'>Radio 3</label>\n            \n            <input type='submit' value='Check the console for onSubmit' />\n        </ValidatedForm>\n    );\n}\n\nexport default ExampleBasic;","import React from 'react';\nimport { ValidatedForm, FormGuard } from 'react-formguards'\n\nconst ExampleFunction = () => {\n\n    return (\n        <ValidatedForm onSubmit={(e, formVals) => console.log(formVals)}>\n\n            <label htmlFor='example2-fzappa'>Must be Frank Zappa:</label>\n            <FormGuard watches='fzappa' validatesWith={val => val === 'Frank Zappa'} >\n                Value must be \"Frank Zappa\"\n            </FormGuard> \n            <input type='text' name='fzappa' id='example2-fzappa' />  \n            \n            <input type='submit' value='Check the console for onSubmit' />\n        </ValidatedForm>\n    );\n}\n\nexport default ExampleFunction;","import React from 'react';\nimport { ValidatedForm, FormGuard } from 'react-formguards'\n\nconst ExampleMultipleWatches = () => {\n\n    function validateTwoInputs (input1, input2) {\n        return (input1 && input1.length > 0) || \n               (input2 && input2.length > 0);\n    }\n\n    return (\n        <ValidatedForm onSubmit={(e, formVals) => console.log(formVals)}>\n\n            <label htmlFor='example3-input1'>Input 1:</label>\n            <input type='text' name='input1' id='example3-input1' />  \n\n            <FormGuard \n                watches={['input1', 'input2']} \n                validatesWith={validateTwoInputs} >\n                \n                Either input 1 OR input 2 is required.\n            </FormGuard> \n\n            <label htmlFor='example3-input2'>Input 2:</label>\n            <input type='text' name='input2' id='example3-input2' />  \n\n            <input type='submit' value='Check the console for onSubmit' />\n        </ValidatedForm>\n    );\n}\n\nexport default ExampleMultipleWatches;","import React from 'react';\nimport { ValidatedForm, FormGuard, validators } from 'react-formguards'\n\nconst ExampleStyle = () => {\n\n    return (\n        <ValidatedForm id='example-style' onSubmit={(e, formVals) => console.log(formVals)}>\n\n            <label htmlFor='example1-email'>Email:</label>\n            <FormGuard watches='email' validatesWith={validators.required} >\n                Email is required  \n            </FormGuard> \n            <FormGuard watches='email' validatesWith={validators.email} >\n                Please enter a valid email address  \n            </FormGuard> \n            <input type='email' name='email' id='example1-email' />  \n            \n            <input type='submit' value='Check the console for onSubmit' />\n        </ValidatedForm>\n    );\n}\n\nexport default ExampleStyle;","import React from 'react';\nimport { ValidatedForm, FormGuard, validators } from 'react-formguards'\n\nconst ExampleValues = () => {\n\n    const formVals = {\n        name: 'Emmett Brown',\n        email: 'doc@example.org',\n        phone: '555 555 5555',\n        comments: 'Great Scott!!'\n    };\n\n    return (\n        <ValidatedForm formVals={formVals} onSubmit={(e, formVals) => console.log(formVals)}>\n            <label htmlFor='example1-name'>Name:</label>\n            <input type='text' name='name' id='example1-name' />\n\n            <label htmlFor='example1-email'>Email:</label>\n            <FormGuard watches='email' validatesWith={validators.required} >\n                Email is required  \n            </FormGuard> \n            <FormGuard watches='email' validatesWith={validators.email} >\n                Please enter a valid email address  \n            </FormGuard> \n            <input type='email' name='email' id='example1-email' />  \n            \n            <label htmlFor='example1-phone'>Telephone:</label>\n            <FormGuard watches='phone' validatesWith={validators.phone} >\n                Please enter a valid phone number  \n            </FormGuard> \n            <input type='tel' name='phone' id='example1-phone' />  \n\n            <label htmlFor='example1-comments'>Comments:</label>\n            <FormGuard watches='comments' validatesWith={validators.maxLength(80)} >\n                Maximum length (80 characters) exceeded\n            </FormGuard> \n            <textarea name='comments' id='example1-comments' />  \n            \n            <input type='submit' value='Check the console for onSubmit' />\n        </ValidatedForm>\n    );\n}\n\nexport default ExampleValues;","import React, { Component } from 'react'\nimport ExampleBasic from './examples/example-basic';\nimport ExampleFunction from './examples/example-function';\nimport ExampleMultipleWatches from './examples/example-multiple-watches';\nimport ExampleStyle from './examples/example-style';\nimport ExampleValues from './examples/example-values';\n\nconst App = () => {\n    return (\n      <>\n      <section>\n        <h1>react-formguards</h1>\n        <h3>A simple, declarative approach to client side validation.</h3>\n        <span><a href='https://www.npmjs.com/package/react-formguards'>npm</a> | <a href='https://github.com/NuclearHorseStudios/react-formguards'>github</a></span>\n        \n        <div className='example'>\n          <div className='example-code'>\n            <h2>Basic Validation</h2>\n            <a href='https://github.com/NuclearHorseStudios/react-formguards/blob/master/example/src/examples/example-basic.jsx'>Source</a>\n            <ol>\n              <li>\n                Just write your form like normal, replacing your &lt;form&gt; tag with a &lt;ValidatedForm&gt; tag.  Pass it an onSubmit function.\n              </li>\n              <li>\n                Then add &lt;FormGuard&gt; tags anywhere you'd like a validation error to show up. <br /> Each &lt;FormGuard&gt; tag:  \n                  <ul>\n                    <li>Watches specified input(s) and validates as needed</li>\n                    <li>Becomes a &lt;span&gt; in the DOM when the error shows</li>                  \n                    <li>onSubmit won't be called until all the FormGuard's are satisfied</li>\n                  </ul>\n\n                  <p>Some basic validators are included -- required, email, phone, maxLength, and minLength</p>\n              </li>\n            </ol>\n            <pre>{`\n    <ValidatedForm onSubmit={(e, formVals) => console.log(formVals)}>\n      <label htmlFor='example1-name'>Name:</label>\n      <input type='text' name='name' id='example1-name' />\n\n      <label htmlFor='example1-email'>Email:</label>\n      <FormGuard watches='email' validatesWith={validators.required} >\n          Email is required  \n      </FormGuard> \n      <FormGuard watches='email' validatesWith={validators.email} >\n          Please enter a valid email address  \n      </FormGuard> \n      <input type='email' name='email' id='example1-email' />  \n      \n      <label htmlFor='example1-phone'>Telephone:</label>\n      <FormGuard watches='phone' validatesWith={validators.phone} >\n          Please enter a valid phone number  \n      </FormGuard> \n      <input type='tel' name='phone' id='example1-phone' />  \n\n      <label htmlFor='example1-comments'>Comments:</label>\n      <FormGuard watches='comments' validatesWith={validators.maxLength(80)} >\n          Maximum length (80 characters) exceeded\n      </FormGuard> \n      <textarea name='comments' id='example1-comments' />  \n\n      <FormGuard watches='radioButtons' validatesWith={validators.required} >\n          Pick One!  \n      </FormGuard> \n      <input type='radio' name='radioButtons' value='Radio 1' id='example1-radioButtons1' />  \n      <label htmlFor='example1-radioButtons1'>Radio 1</label>\n      <input type='radio' name='radioButtons' value='Radio 2' id='example1-radioButtons2' />  \n      <label htmlFor='example1-radioButtons2'>Radio 2</label>\n      <input type='radio' name='radioButtons' value='Radio 3' id='example1-radioButtons3' />  \n      <label htmlFor='example1-radioButtons3'>Radio 3</label>\n      \n      <input type='submit' value='Check the console for onSubmit' />\n    </ValidatedForm>\n          `}            \n            </pre>\n          </div>\n          <div className='example-implementation'>\n            <ExampleBasic />\n          </div>\n        </div>\n\n        <div className='example'>\n          <div className='example-code'>\n            <h2>Custom Validation Functions</h2>\n            <a href='https://github.com/NuclearHorseStudios/react-formguards/blob/master/example/src/examples/example-function.jsx'>Source</a>\n            <p>Just pass a function to validatesWith to use your own validation functions.</p>\n            <pre>\n            {`\n    <ValidatedForm onSubmit={(e, formVals) => console.log(formVals)}>\n\n      <label htmlFor='example2-fzappa'>Must be Frank Zappa:</label>\n      <FormGuard watches='fzappa' validatesWith={ val => val === 'Frank Zappa' } >\n          Value must be \"Frank Zappa\"\n      </FormGuard> \n      <input type='text' name='fzappa' id='example2-fzappa' />  \n      \n      <input type='submit' value='Check the console for onSubmit' />\n    </ValidatedForm>\n            `}            \n            </pre>\n          </div>\n          <div className='example-implementation'>\n            <ExampleFunction />\n          </div>\n        </div>\n\n        <div className='example'>\n          <div className='example-code'>\n            <h2>Guarding Multiple Form Elements with one FormGuard</h2>\n            <a href='https://github.com/NuclearHorseStudios/react-formguards/blob/master/example/src/examples/example-multiple-watches.jsx'>Source</a>\n            <p>A FormGuard can watch multiple elements by passing an array to the <i>watches</i> prop</p>\n            <p>In this example the <i>validateTwoInputs</i> function requires that either <i>input1</i> OR <i>input2</i> is filled in.</p>\n            <pre>\n            {`\n    function validateTwoInputs (input1, input2) {\n      return (input1 && input1.length > 0) || \n             (input2 && input2.length > 0);\n    }\n\n    [...]\n\n    <ValidatedForm onSubmit={(e, formVals) => console.log(formVals)}>\n\n      <label htmlFor='example3-input1'>Input 1:</label>\n      <input type='text' name='input1' id='example3-input1' />  \n\n      <FormGuard \n          watches={['input1', 'input2']} \n          validatesWith={validateTwoInputs} >\n          \n          Either input 1 OR input 2 is required.\n      </FormGuard> \n\n      <label htmlFor='example3-input2'>Input 2:</label>\n      <input type='text' name='input2' id='example3-input2' />  \n\n      <input type='submit' value='Check the console for onSubmit' />\n    </ValidatedForm>\n            `}            \n            </pre>\n          </div>\n          <div className='example-implementation'>\n            <ExampleMultipleWatches />\n          </div>\n        </div>\n\n        <div className='example'>\n          <div className='example-code'>\n            <h2>Styling / CSS</h2>\n            <a href='https://github.com/NuclearHorseStudios/react-formguards/blob/master/example/src/examples/example-style.jsx'>Source</a>\n            <p>react-formguards will add the css class 'input-invalid' to form controls that are invalid.</p>\n            <p>The span that displays a FormGuard error text will have the css class 'validation-error'</p>\n            <pre>\n            {`\n    \n    .input-invalid {\n      outline: 3px solid #0000ff;\n    }\n\n    span.validation-error {\n      float: right;\n      font-weight: bold;\n      color: #00ff00;\n    }\n\n    <ValidatedForm onSubmit={(e, formVals) => console.log(formVals)}>\n\n      <label htmlFor='example4-email'>Email:</label>\n      <FormGuard watches='email' validatesWith={validators.required} >\n          Email is required  \n      </FormGuard> \n      <FormGuard watches='email' validatesWith={validators.email} >\n          Please enter a valid email address  \n      </FormGuard> \n      <input type='email' name='email' id='example4-email' />  \n      \n      <input type='submit' value='Check the console for onSubmit' />\n    </ValidatedForm>\n            `}            \n            </pre>\n          </div>\n          <div className='example-implementation'>\n            <ExampleStyle />\n          </div>\n        </div>\n        \n        <div className='example'>\n          <div className='example-code'>\n            <h2>Passing Preset Values</h2>\n            <a href='https://github.com/NuclearHorseStudios/react-formguards/blob/master/example/src/examples/example-values.jsx'>Source</a>\n            <p>Just pass an object as the formVals prop to preset values in the form.</p>\n            <pre>\n            {`\n    const formVals = {\n      name: 'Emmett Brown',\n      email: 'doc@example.org',\n      comments: 'Great Scott!'\n    };\n\n    [...]\n\n    <ValidatedForm formVals={formVals} onSubmit={(e, formVals) => console.log(formVals)}>\n      <label htmlFor='example1-name'>Name:</label>\n      <input type='text' name='name' id='example1-name' />\n\n      <label htmlFor='example1-email'>Email:</label>\n      <FormGuard watches='email' validatesWith={validators.required} >\n          Email is required  \n      </FormGuard> \n      <FormGuard watches='email' validatesWith={validators.email} >\n          Please enter a valid email address  \n      </FormGuard> \n      <input type='email' name='email' id='example1-email' />  \n      \n      <label htmlFor='example1-phone'>Telephone:</label>\n      <FormGuard watches='phone' validatesWith={validators.phone} >\n          Please enter a valid phone number  \n      </FormGuard> \n      <input type='tel' value='555 555 5555' name='phone' id='example1-phone' />  \n\n      <label htmlFor='example1-comments'>Comments:</label>\n      <FormGuard watches='comments' validatesWith={validators.maxLength(80)} >\n          Maximum length (80 characters) exceeded\n      </FormGuard> \n      <textarea name='comments' id='example1-comments' />  \n      \n      <input type='submit' value='Check the console for onSubmit' />\n    </ValidatedForm>\n            `}            \n            </pre>\n          </div>\n          <div className='example-implementation'>\n            <ExampleValues />\n          </div>\n        </div>\n      </section>\n      </>\n    );\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}