{"version":3,"sources":["../../dist/index.es.js","examples/example-basic.jsx","examples/example-function.jsx","examples/example-multiple-watches.jsx","examples/example-style.jsx","App.js","index.js"],"names":["classnames","fn","module","exports","createCommonjsModule","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","default","window","defineProperty","obj","value","Object","enumerable","configurable","writable","_extends","assign","target","source","prototype","slicedToArray","arr","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","sliceIterator","TypeError","toConsumableArray","arr2","from","formTypes","defaultValues","checkbox","select-multiple","file-multiple","index_es_ValidatedForm","props","children","onSubmit","_props$formVals","formVals","_useState","react","_useState2","state","setState","_useState3","_useState4","vals","setFormVals","resetForm","_onChange","e","onChange","_e$target","name","options","files","checked","type","reduce","selected","option","concat","mergeState","dirty","val","newVals","entries","acc","_ref","_ref2","setFormVal","st","invalid","_ref6","_ref7","isvalid","react_default","a","createElement","preventDefault","values","cState","validated","formIsValid","_ref4","_ref5","injectProps","nodes","Children","map","child","gKids","isFormElement","includes","isGuard","index_es_FormGuard","_onChange2","_ref3","multiple","getNormalizedType","propsVal","getDefaultValue","getValue","inputInvalid","isSubmissionType","className","input-invalid","cloneElement","handleFormElement","watches","forEach","handleFormGuard","_ref8","_ref8$state","validatesWith","isDirty","watch","markValid","validators","phone","PHONE_REGEX","test","email","EMAIL_REGEX","minLength","len","maxLength","required","keys","ExampleBasic","console","log","htmlFor","id","ExampleFunction","ExampleMultipleWatches","input1","input2","ExampleStyle","App","Fragment","href","example_basic","example_function","example_multiple_watches","example_style","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7e5ce5a6.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar classnames = createCommonjsModule(function (module) {\n  /*!\n    Copyright (c) 2017 Jed Watson.\n    Licensed under the MIT License (MIT), see\n    http://jedwatson.github.io/classnames\n  */\n\n  /* global define */\n  (function () {\n    var hasOwn = {}.hasOwnProperty;\n\n    function classNames() {\n      var classes = [];\n\n      for (var i = 0; i < arguments.length; i++) {\n        var arg = arguments[i];\n        if (!arg) continue;\n        var argType = typeof arg;\n\n        if (argType === 'string' || argType === 'number') {\n          classes.push(arg);\n        } else if (Array.isArray(arg) && arg.length) {\n          var inner = classNames.apply(null, arg);\n\n          if (inner) {\n            classes.push(inner);\n          }\n        } else if (argType === 'object') {\n          for (var key in arg) {\n            if (hasOwn.call(arg, key) && arg[key]) {\n              classes.push(key);\n            }\n          }\n        }\n      }\n\n      return classes.join(' ');\n    }\n\n    if (module.exports) {\n      classNames.default = classNames;\n      module.exports = classNames;\n    } else {\n      window.classNames = classNames;\n    }\n  })();\n});\n\nvar defineProperty = function defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar toConsumableArray = function toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n/* eslint-disable padded-blocks */\n\n\nvar formTypes = ['input', 'select', 'textarea'];\nvar defaultValues = {\n  'checkbox': false,\n  'select-multiple': [],\n  'file-multiple': []\n};\n\nvar ValidatedForm = function ValidatedForm(props) {\n  var children = props.children,\n      onSubmit = props.onSubmit,\n      _props$formVals = props.formVals,\n      formVals = _props$formVals === undefined ? {} : _props$formVals;\n\n  var _useState = useState({}),\n      _useState2 = slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = useState(formVals),\n      _useState4 = slicedToArray(_useState3, 2),\n      vals = _useState4[0],\n      setFormVals = _useState4[1];\n\n  useEffect(function () {\n    invalidateForm();\n  }, [vals]);\n\n  function _onSubmit(e) {\n    e.preventDefault();\n\n    if (!formIsValid()) {\n      setFormDirty();\n    } else {\n      onSubmit(e, vals, resetForm);\n    }\n  }\n\n  function resetForm() {\n    setState({});\n    setFormVals({});\n  }\n\n  function _onChange(e) {\n    var onChange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value,\n        options = _e$target.options,\n        files = _e$target.files,\n        checked = _e$target.checked,\n        type = _e$target.type;\n\n    if (type === 'checkbox') {\n      // A checkbox will pass the *current* state on change as string on click\n      if (value === 'true') {\n        value = false;\n      } else if (value === 'false') {\n        value = true;\n      } else if (!checked) {\n        value = undefined;\n      }\n    } else if (type === 'select' || type === 'select-multiple') {\n      value = Array.from(options).reduce(function (selected, option) {\n        return option.selected ? [].concat(toConsumableArray(selected), [option.value]) : selected;\n      }, []);\n    } else if (type === 'file') {\n      value = files;\n    }\n\n    mergeState(name, {\n      dirty: true\n    });\n    setFormVal(name, value);\n    onChange(e);\n  }\n\n  function mergeState(name, st) {\n    setState(_extends({}, state, defineProperty({}, '' + name, _extends({}, state[name], st))));\n  }\n\n  function setFormVal(name, val) {\n    if (val === undefined) {\n      // delete vals[name]; this might be cleaner, even w/ mutation\n      var newVals = Object.entries(vals).reduce(function (acc, _ref) {\n        var _ref2 = slicedToArray(_ref, 2),\n            key = _ref2[0],\n            val = _ref2[1];\n\n        return key === name ? acc : _extends({}, acc, defineProperty({}, '' + key, val));\n      });\n      setFormVals(newVals);\n    } else {\n      setFormVals(_extends({}, vals, defineProperty({}, '' + name, val)));\n    }\n  }\n\n  function injectProps() {\n    var nodes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    return React.Children.map(nodes, function (child, key) {\n      if (!child || !child.props) {\n        return child;\n      }\n\n      var props = child.props,\n          type = child.type;\n      var children = props.children;\n      var gKids = children ? injectProps(children) : children;\n      var isFormElement = formTypes.includes(type);\n      var isGuard = type === FormGuard;\n\n      if (isFormElement) {\n        return handleFormElement(child, key);\n      } else if (isGuard) {\n        return handleFormGuard(child, key);\n      } else {\n        return React.cloneElement(child, {}, gKids);\n      }\n    });\n\n    function handleFormElement(child, key) {\n      function getNormalizedType(child) {\n        if (child.type === 'select' && child.props.multiple) {\n          return 'select-multiple';\n        } else if (child.props.type === 'file' && child.props.multiple) {\n          return 'file-multiple';\n        } else {\n          return child.props.type || child.type;\n        }\n      }\n\n      function getDefaultValue(type) {\n        return defaultValues[type] === undefined ? '' : defaultValues[type];\n      }\n\n      function getValue(type, propsVal, name) {\n        switch (type) {\n          case 'radio':\n            return propsVal;\n\n          case 'file-multiple':\n          case 'file':\n            return undefined;\n\n          default:\n            return vals[name] || propsVal || getDefaultValue(type);\n        }\n      }\n\n      var props = child.props;\n      var name = props.name,\n          _onChange2 = props.onChange;\n\n      var _ref3 = state[name] || {},\n          isvalid = _ref3.isvalid,\n          dirty = _ref3.dirty;\n\n      var type = getNormalizedType(child);\n      var value = getValue(type, props.value, name);\n      var inputInvalid = isvalid !== undefined && !isvalid && dirty;\n      var checked = type === 'radio' && value === vals[name];\n      var isSubmissionType = type === 'submit' || type === 'image' || type === 'reset';\n      var className = classnames(props.className, {\n        'input-invalid': inputInvalid\n      });\n      return isSubmissionType ? child : React.cloneElement(child, _extends({}, props, {\n        value: value,\n        checked: checked,\n        className: className,\n        key: key,\n        onChange: function onChange(e) {\n          return _onChange(e, _onChange2);\n        }\n      }));\n    }\n\n    function handleFormGuard(child, key) {\n      var watches = !Array.isArray(child.props.watches) ? [child.props.watches] : child.props.watches;\n      var value = watches.map(function (name) {\n        return vals[name] || '';\n      });\n      watches.forEach(function (name) {\n        if (!state[name] || !state[name].validated) {\n          mergeState(name, {\n            validated: true\n          });\n        }\n      });\n      return React.cloneElement(child, {\n        state: state,\n        key: key,\n        mergeState: mergeState,\n        value: value\n      });\n    }\n  }\n\n  function formIsValid() {\n    var entries = Object.values(state);\n    return entries.length === 0 || !entries.reduce(function (invalid, cState) {\n      return invalid || cState.validated && !cState.isvalid;\n    }, false);\n  }\n\n  function setFormDirty() {\n    setState(Object.entries(state).reduce(function (dirty, _ref4) {\n      var _ref5 = slicedToArray(_ref4, 2),\n          name = _ref5[0],\n          cState = _ref5[1];\n\n      return _extends({}, dirty, defineProperty({}, '' + name, _extends({}, cState, {\n        dirty: true\n      })));\n    }, {}));\n  }\n\n  function invalidateForm() {\n    setState(Object.entries(state).reduce(function (invalid, _ref6) {\n      var _ref7 = slicedToArray(_ref6, 2),\n          name = _ref7[0],\n          st = _ref7[1];\n\n      return _extends({}, invalid, defineProperty({}, '' + name, _extends({}, st, {\n        isvalid: undefined\n      })));\n    }, {}));\n  }\n\n  return React.createElement('form', _extends({}, props, {\n    onSubmit: _onSubmit\n  }), injectProps(children));\n};\n\nvar FormGuard = function FormGuard(_ref8) {\n  var children = _ref8.children,\n      watches = _ref8.watches,\n      _ref8$state = _ref8.state,\n      state = _ref8$state === undefined ? {} : _ref8$state,\n      mergeState = _ref8.mergeState,\n      validatesWith = _ref8.validatesWith,\n      value = _ref8.value;\n  var isvalid = !!validatesWith.apply(null, value);\n  var isDirty = false;\n\n  if (!Array.isArray(watches)) {\n    watches = [watches];\n  }\n\n  watches.forEach(function (watch) {\n    var st = state[watch];\n    var markValid = isvalid && st && st.isvalid === undefined;\n    var invalidate = !isvalid && st && st.isvalid !== false;\n\n    if (invalidate || markValid) {\n      mergeState(watch, {\n        isvalid: isvalid\n      });\n    }\n\n    isDirty = isDirty || st && st.dirty;\n  });\n  return !isvalid && isDirty === true && React.createElement('span', {\n    className: 'validation-error'\n  }, children);\n};\n\nvar validators = {\n  phone: function phone() {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return PHONE_REGEX.test(value);\n  },\n  email: function email() {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return EMAIL_REGEX.test(value);\n  },\n  minLength: function minLength(len) {\n    return function () {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      return value.length >= len;\n    };\n  },\n  maxLength: function maxLength(len) {\n    return function () {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      return value.length <= len;\n    };\n  },\n  required: function required() {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return typeof value === 'number' || value !== null && value !== undefined && value.length !== 0 && Object.keys(value).length !== 0 && value !== '';\n  }\n};\nvar EMAIL_REGEX = /^$|(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\nvar PHONE_REGEX = /^$|^(\\+\\d{1,3})?\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4})$/;\nexport { ValidatedForm, FormGuard, validators, EMAIL_REGEX, PHONE_REGEX };","import React from 'react';\nimport { ValidatedForm, FormGuard, validators } from 'react-formguards'\n\nconst ExampleBasic = () => {\n\n    return (\n        <ValidatedForm onSubmit={(e, formVals) => console.log(formVals)}>\n            <label htmlFor='example1-name'>Name:</label>\n            <input type='text' name='name' id='example1-name' />\n\n            <label htmlFor='example1-email'>Email:</label>\n            <FormGuard watches='email' validatesWith={validators.required} >\n                Email is required  \n            </FormGuard> \n            <FormGuard watches='email' validatesWith={validators.email} >\n                Please enter a valid email address  \n            </FormGuard> \n            <input type='email' name='email' id='example1-email' />  \n            \n            <label htmlFor='example1-phone'>Telephone:</label>\n            <FormGuard watches='phone' validatesWith={validators.phone} >\n                Please enter a valid phone number  \n            </FormGuard> \n            <input type='tel' name='phone' id='example1-phone' />  \n\n            <label htmlFor='example1-comments'>Comments:</label>\n            <FormGuard watches='comments' validatesWith={validators.maxLength(80)} >\n                Maximum length (80 characters) exceeded\n            </FormGuard> \n            <textarea name='comments' id='example1-comments' />  \n\n            <FormGuard watches='radioButtons' validatesWith={validators.required} >\n                Pick One!  \n            </FormGuard> \n            <input type='radio' name='radioButtons' value='Radio 1' id='example1-radioButtons1' />  \n            <label htmlFor='example1-radioButtons1'>Radio 1</label>\n            <input type='radio' name='radioButtons' value='Radio 2' id='example1-radioButtons2' />  \n            <label htmlFor='example1-radioButtons2'>Radio 2</label>\n            <input type='radio' name='radioButtons' value='Radio 3' id='example1-radioButtons3' />  \n            <label htmlFor='example1-radioButtons3'>Radio 3</label>\n            \n            <input type='submit' value='Check the console for onSubmit' />\n        </ValidatedForm>\n    );\n}\n\nexport default ExampleBasic;","import React from 'react';\nimport { ValidatedForm, FormGuard } from 'react-formguards'\n\nconst ExampleFunction = () => {\n\n    return (\n        <ValidatedForm onSubmit={(e, formVals) => console.log(formVals)}>\n\n            <label htmlFor='example2-fzappa'>Must be Frank Zappa:</label>\n            <FormGuard watches='fzappa' validatesWith={val => val === 'Frank Zappa'} >\n                Value must be \"Frank Zappa\"\n            </FormGuard> \n            <input type='text' name='fzappa' id='example2-fzappa' />  \n            \n            <input type='submit' value='Check the console for onSubmit' />\n        </ValidatedForm>\n    );\n}\n\nexport default ExampleFunction;","import React from 'react';\nimport { ValidatedForm, FormGuard } from 'react-formguards'\n\nconst ExampleMultipleWatches = () => {\n\n    function validateTwoInputs (input1, input2) {\n        return (input1 && input1.length > 0) || \n               (input2 && input2.length > 0);\n    }\n\n    return (\n        <ValidatedForm onSubmit={(e, formVals) => console.log(formVals)}>\n\n            <label htmlFor='example3-input1'>Input 1:</label>\n            <input type='text' name='input1' id='example3-input1' />  \n\n            <FormGuard \n                watches={['input1', 'input2']} \n                validatesWith={validateTwoInputs} >\n                \n                Either input 1 OR input 2 is required.\n            </FormGuard> \n\n            <label htmlFor='example3-input2'>Input 2:</label>\n            <input type='text' name='input2' id='example3-input2' />  \n\n            <input type='submit' value='Check the console for onSubmit' />\n        </ValidatedForm>\n    );\n}\n\nexport default ExampleMultipleWatches;","import React from 'react';\nimport { ValidatedForm, FormGuard, validators } from 'react-formguards'\n\nconst ExampleStyle = () => {\n\n    return (\n        <ValidatedForm id='example-style' onSubmit={(e, formVals) => console.log(formVals)}>\n\n            <label htmlFor='example1-email'>Email:</label>\n            <FormGuard watches='email' validatesWith={validators.required} >\n                Email is required  \n            </FormGuard> \n            <FormGuard watches='email' validatesWith={validators.email} >\n                Please enter a valid email address  \n            </FormGuard> \n            <input type='email' name='email' id='example1-email' />  \n            \n            <input type='submit' value='Check the console for onSubmit' />\n        </ValidatedForm>\n    );\n}\n\nexport default ExampleStyle;","import React, { Component } from 'react'\nimport ExampleBasic from './examples/example-basic';\nimport ExampleFunction from './examples/example-function';\nimport ExampleMultipleWatches from './examples/example-multiple-watches';\nimport ExampleStyle from './examples/example-style';\n\nconst App = () => {\n    return (\n      <>\n      <section>\n        <h1>react-formguards</h1>\n        <h3>A simple, declarative approach to client side validation.</h3>\n\n        <div className='example'>\n          <div className='example-code'>\n            <h2>Basic Validation</h2>\n            <a href='https://github.com/NuclearHorseStudios/react-formguards/blob/master/example/src/examples/example-basic.jsx'>Source</a>\n            <ol>\n              <li>\n                Just write your form like normal, replacing your &lt;form&gt; tag with a &lt;ValidatedForm&gt; tag.  Pass it an onSubmit function.\n              </li>\n              <li>\n                Then add &lt;FormGuard&gt; tags anywhere you'd like a validation error to show up. <br /> Each &lt;FormGuard&gt; tag:  \n                  <ul>\n                    <li>Watches specified input(s) and validates as needed</li>\n                    <li>Becomes a &lt;span&gt; in the DOM when the error shows</li>                  \n                    <li>onSubmit won't be called until all the FormGuard's are satisfied</li>\n                  </ul>\n\n                  <p>Some basic validators are included -- required, email, phone, maxLength, and minLength</p>\n              </li>\n            </ol>\n            <pre>{`\n    <ValidatedForm onSubmit={(e, formVals) => console.log(formVals)}>\n      <label htmlFor='example1-name'>Name:</label>\n      <input type='text' name='name' id='example1-name' />\n\n      <label htmlFor='example1-email'>Email:</label>\n      <FormGuard watches='email' validatesWith={validators.required} >\n          Email is required  \n      </FormGuard> \n      <FormGuard watches='email' validatesWith={validators.email} >\n          Please enter a valid email address  \n      </FormGuard> \n      <input type='email' name='email' id='example1-email' />  \n      \n      <label htmlFor='example1-phone'>Telephone:</label>\n      <FormGuard watches='phone' validatesWith={validators.phone} >\n          Please enter a valid phone number  \n      </FormGuard> \n      <input type='tel' name='phone' id='example1-phone' />  \n\n      <label htmlFor='example1-comments'>Comments:</label>\n      <FormGuard watches='comments' validatesWith={validators.maxLength(80)} >\n          Maximum length (80 characters) exceeded\n      </FormGuard> \n      <textarea name='comments' id='example1-comments' />  \n\n      <FormGuard watches='radioButtons' validatesWith={validators.required} >\n          Pick One!  \n      </FormGuard> \n      <input type='radio' name='radioButtons' value='Radio 1' id='example1-radioButtons1' />  \n      <label htmlFor='example1-radioButtons1'>Radio 1</label>\n      <input type='radio' name='radioButtons' value='Radio 2' id='example1-radioButtons2' />  \n      <label htmlFor='example1-radioButtons2'>Radio 2</label>\n      <input type='radio' name='radioButtons' value='Radio 3' id='example1-radioButtons3' />  \n      <label htmlFor='example1-radioButtons3'>Radio 3</label>\n      \n      <input type='submit' value='Check the console for onSubmit' />\n    </ValidatedForm>\n          `}            \n            </pre>\n          </div>\n          <div className='example-implementation'>\n            <ExampleBasic />\n          </div>\n        </div>\n\n        <div className='example'>\n          <div className='example-code'>\n            <h2>Custom Validation Functions</h2>\n            <a href='https://github.com/NuclearHorseStudios/react-formguards/blob/master/example/src/examples/example-function.jsx'>Source</a>\n            <p>Just pass a function to validatesWith to use your own validation functions.</p>\n            <pre>\n            {`\n    <ValidatedForm onSubmit={(e, formVals) => console.log(formVals)}>\n\n      <label htmlFor='example2-fzappa'>Must be Frank Zappa:</label>\n      <FormGuard watches='fzappa' validatesWith={ val => val === 'Frank Zappa' } >\n          Value must be \"Frank Zappa\"\n      </FormGuard> \n      <input type='text' name='fzappa' id='example2-fzappa' />  \n      \n      <input type='submit' value='Check the console for onSubmit' />\n    </ValidatedForm>\n            `}            \n            </pre>\n          </div>\n          <div className='example-implementation'>\n            <ExampleFunction />\n          </div>\n        </div>\n\n        <div className='example'>\n          <div className='example-code'>\n            <h2>Guarding Multiple Form Elements with one FormGuard</h2>\n            <a href='https://github.com/NuclearHorseStudios/react-formguards/blob/master/example/src/examples/example-multiple-watches.jsx'>Source</a>\n            <p>A FormGuard can watch multiple elements by passing an array to the <i>watches</i> prop</p>\n            <p>In this example the <i>validateTwoInputs</i> function requires that either <i>input1</i> OR <i>input2</i> is filled in.</p>\n            <pre>\n            {`\n    function validateTwoInputs (input1, input2) {\n      return (input1 && input1.length > 0) || \n             (input2 && input2.length > 0);\n    }\n\n    [...]\n\n    <ValidatedForm onSubmit={(e, formVals) => console.log(formVals)}>\n\n      <label htmlFor='example3-input1'>Input 1:</label>\n      <input type='text' name='input1' id='example3-input1' />  \n\n      <FormGuard \n          watches={['input1', 'input2']} \n          validatesWith={validateTwoInputs} >\n          \n          Either input 1 OR input 2 is required.\n      </FormGuard> \n\n      <label htmlFor='example3-input2'>Input 2:</label>\n      <input type='text' name='input2' id='example3-input2' />  \n\n      <input type='submit' value='Check the console for onSubmit' />\n    </ValidatedForm>\n            `}            \n            </pre>\n          </div>\n          <div className='example-implementation'>\n            <ExampleMultipleWatches />\n          </div>\n        </div>\n\n        <div className='example'>\n          <div className='example-code'>\n            <h2>Styling / CSS</h2>\n            <a href='https://github.com/NuclearHorseStudios/react-formguards/blob/master/example/src/examples/example-style.jsx'>Source</a>\n            <p>react-formguards will add the css class 'input-invalid' to form controls that are invalid.</p>\n            <p>The span that displays a FormGuard error text will have the css class 'validation-error'</p>\n            <pre>\n            {`\n    \n    .input-invalid {\n      outline: 3px solid #0000ff;\n    }\n\n    span.validation-error {\n      float: right;\n      font-weight: bold;\n      color: #00ff00;\n    }\n\n    <ValidatedForm onSubmit={(e, formVals) => console.log(formVals)}>\n\n      <label htmlFor='example4-email'>Email:</label>\n      <FormGuard watches='email' validatesWith={validators.required} >\n          Email is required  \n      </FormGuard> \n      <FormGuard watches='email' validatesWith={validators.email} >\n          Please enter a valid email address  \n      </FormGuard> \n      <input type='email' name='email' id='example4-email' />  \n      \n      <input type='submit' value='Check the console for onSubmit' />\n    </ValidatedForm>\n            `}            \n            </pre>\n          </div>\n          <div className='example-implementation'>\n            <ExampleStyle />\n          </div>\n        </div>\n        \n      </section>\n      </>\n    );\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}