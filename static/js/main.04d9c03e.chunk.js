(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{10:function(e,a,t){"use strict";t.r(a);var n=t(0),l=t.n(n),r=t(2),i=t.n(r);t(9);var m=function(e,a){return e(a={exports:{}},a.exports),a.exports}(function(e){!function(){var a={}.hasOwnProperty;function t(){for(var e=[],n=0;n<arguments.length;n++){var l=arguments[n];if(l){var r=typeof l;if("string"===r||"number"===r)e.push(l);else if(Array.isArray(l)&&l.length){var i=t.apply(null,l);i&&e.push(i)}else if("object"===r)for(var m in l)a.call(l,m)&&l[m]&&e.push(m)}}return e.join(" ")}e.exports?(t.default=t,e.exports=t):window.classNames=t}()}),o=function(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e},u=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},s=function(){return function(e,a){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,a){var t=[],n=!0,l=!1,r=void 0;try{for(var i,m=e[Symbol.iterator]();!(n=(i=m.next()).done)&&(t.push(i.value),!a||t.length!==a);n=!0);}catch(o){l=!0,r=o}finally{try{!n&&m.return&&m.return()}finally{if(l)throw r}}return t}(e,a);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),c=function(e){if(Array.isArray(e)){for(var a=0,t=Array(e.length);a<e.length;a++)t[a]=e[a];return t}return Array.from(e)},p=["input","select","textarea"],d={checkbox:!1,"select-multiple":[],"file-multiple":[]},h=function(e){var a=e.children,t=e.className,r=e.id,i=e.name,h=e.onSubmit,x=e.formVals,v=void 0===x?{}:x,E=Object(n.useState)({}),b=s(E,2),y=b[0],g=b[1],F=Object(n.useState)(v),w=s(F,2),S=w[0],G=w[1];function V(){g({}),G({})}function k(e,a){g(u({},y,o({},""+e,u({},y[e],a))))}function N(e,a){if(void 0===a){var t=Object.entries(S).reduce(function(a,t){var n=s(t,2),l=n[0],r=n[1];return l===e?a:u({},a,o({},""+l,r))});G(t)}else G(u({},S,o({},""+e,a)))}return Object(n.useEffect)(function(){g(Object.entries(y).reduce(function(e,a){var t=s(a,2),n=t[0],l=t[1];return u({},e,o({},""+n,u({},l,{isvalid:void 0})))},{}))},[S]),l.a.createElement("form",u({className:t,id:r,name:i},{onSubmit:function(e){e.preventDefault(),function(){var e=Object.values(y);return 0===e.length||!e.reduce(function(e,a){return e||a.validated&&!a.isvalid},!1)}()?h(e,S,V):g(Object.entries(y).reduce(function(e,a){var t=s(a,2),n=t[0],l=t[1];return u({},e,o({},""+n,u({},l,{dirty:!0})))},{}))}}),function e(){var a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return l.a.Children.map(a,function(a,t){if(!a||!a.props)return a;var n=a.props,r=a.type,i=n.children?e(n.children):[],o=p.includes(r),u=r===f;return o?function(e,a){var t=e.props,n=t.name,r=t.onChange,i=y[n]||{},o=i.isvalid,u=i.dirty,s=function(e){return"select"===e.type&&e.props.multiple?"select-multiple":"file"===e.props.type&&e.props.multiple?"file-multiple":e.props.type||e.type}(e),p=function(e,a,t){switch(e){case"radio":return a;case"file-multiple":case"file":return;default:return S[t]||a||function(e){return void 0===d[e]?"":d[e]}(e)}}(s,e.props.value,n),h=void 0!==o&&!o&&u,f=["submit","image","reset"].includes(s),x=e.props.className;return f?e:(u||"radio"===s||S[n]||!p||N(n,p),l.a.cloneElement(e,{onBlur:e.props.onBlur,onClick:e.props.onClick,onFocus:e.props.onFocus,onSelect:e.props.onSelect,className:m(x,{"input-invalid":h}),onChange:function(e){return function(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:function(){},t=e.target,n=t.name,l=t.value,r=t.options,i=t.files,m=t.checked,o=t.type;"checkbox"===o?"true"===l?l=!1:"false"===l?l=!0:m||(l=void 0):"select"===o||"select-multiple"===o?l=Array.from(r).reduce(function(e,a){return a.selected?[].concat(c(e),[a.value]):e},[]):"file"===o&&(l=i),y[n]&&!0!==y[n].dirty&&k(n,{dirty:!0}),N(n,l),a(e)}(e,r)},value:p,key:a}))}(a,t):u?function(e,a){var t=Array.isArray(e.props.watches)?e.props.watches:[e.props.watches],n=t.map(function(e){return S[e]||""});return t.forEach(function(e){y[e]&&y[e].validated||k(e,{validated:!0})}),l.a.cloneElement(e,{state:y,key:a,mergeState:k,value:n})}(a,t):l.a.cloneElement(a,{},i)})}(a))},f=function(e){var a=e.children,t=e.watches,n=e.state,r=void 0===n?{}:n,i=e.mergeState,m=e.validatesWith,o=e.value,u=!!m.apply(null,o),s=!1;return Array.isArray(t)||(t=[t]),t.forEach(function(e){var a=r[e],t=u&&a&&void 0===a.isvalid;(!u&&a&&!1!==a.isvalid||t)&&i(e,{isvalid:u}),s=s||a&&a.dirty}),!u&&!0===s&&l.a.createElement("span",{className:"validation-error"},a)},x={phone:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return E.test(e)},email:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return v.test(e)},minLength:function(e){return function(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:"").length>=e}},maxLength:function(e){return function(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:"").length<=e}},required:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return"number"===typeof e||null!==e&&void 0!==e&&0!==e.length&&0!==Object.keys(e).length&&""!==e}},v=/^$|(?:[a-z0-9!#$%&'*+\/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+\/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])/,E=/^$|^(\+\d{1,3})?\D?(\d{3})\D?\D?(\d{3})\D?(\d{4})$/,b=function(){return l.a.createElement(h,{onSubmit:function(e,a){return console.log(a)}},l.a.createElement("label",{htmlFor:"example1-name"},"Name:"),l.a.createElement("input",{type:"text",name:"name",id:"example1-name"}),l.a.createElement("label",{htmlFor:"example1-email"},"Email:"),l.a.createElement(f,{watches:"email",validatesWith:x.required},"Email is required"),l.a.createElement(f,{watches:"email",validatesWith:x.email},"Please enter a valid email address"),l.a.createElement("input",{type:"email",name:"email",id:"example1-email"}),l.a.createElement("label",{htmlFor:"example1-phone"},"Telephone:"),l.a.createElement(f,{watches:"phone",validatesWith:x.phone},"Please enter a valid phone number"),l.a.createElement("input",{type:"tel",name:"phone",id:"example1-phone"}),l.a.createElement("label",{htmlFor:"example1-comments"},"Comments:"),l.a.createElement(f,{watches:"comments",validatesWith:x.maxLength(80)},"Maximum length (80 characters) exceeded"),l.a.createElement("textarea",{name:"comments",id:"example1-comments"}),l.a.createElement(f,{watches:"radioButtons",validatesWith:x.required},"Pick One!"),l.a.createElement("input",{type:"radio",name:"radioButtons",value:"Radio 1",id:"example1-radioButtons1"}),l.a.createElement("label",{htmlFor:"example1-radioButtons1"},"Radio 1"),l.a.createElement("input",{type:"radio",name:"radioButtons",value:"Radio 2",id:"example1-radioButtons2"}),l.a.createElement("label",{htmlFor:"example1-radioButtons2"},"Radio 2"),l.a.createElement("input",{type:"radio",name:"radioButtons",value:"Radio 3",id:"example1-radioButtons3"}),l.a.createElement("label",{htmlFor:"example1-radioButtons3"},"Radio 3"),l.a.createElement("input",{type:"submit",value:"Check the console for onSubmit"}))},y=function(){return l.a.createElement(h,{onSubmit:function(e,a){return console.log(a)}},l.a.createElement("label",{htmlFor:"example2-fzappa"},"Must be Frank Zappa:"),l.a.createElement(f,{watches:"fzappa",validatesWith:function(e){return"Frank Zappa"===e}},'Value must be "Frank Zappa"'),l.a.createElement("input",{type:"text",name:"fzappa",id:"example2-fzappa"}),l.a.createElement("input",{type:"submit",value:"Check the console for onSubmit"}))},g=function(){return l.a.createElement(h,{onSubmit:function(e,a){return console.log(a)}},l.a.createElement("label",{htmlFor:"example3-input1"},"Input 1:"),l.a.createElement("input",{type:"text",name:"input1",id:"example3-input1"}),l.a.createElement(f,{watches:["input1","input2"],validatesWith:function(e,a){return e&&e.length>0||a&&a.length>0}},"Either input 1 OR input 2 is required."),l.a.createElement("label",{htmlFor:"example3-input2"},"Input 2:"),l.a.createElement("input",{type:"text",name:"input2",id:"example3-input2"}),l.a.createElement("input",{type:"submit",value:"Check the console for onSubmit"}))},F=function(){return l.a.createElement(h,{id:"example-style",onSubmit:function(e,a){return console.log(a)}},l.a.createElement("label",{htmlFor:"example1-email"},"Email:"),l.a.createElement(f,{watches:"email",validatesWith:x.required},"Email is required"),l.a.createElement(f,{watches:"email",validatesWith:x.email},"Please enter a valid email address"),l.a.createElement("input",{type:"email",name:"email",id:"example1-email"}),l.a.createElement("input",{type:"submit",value:"Check the console for onSubmit"}))},w=function(){return l.a.createElement(h,{formVals:{name:"Emmett Brown",email:"doc@example.org",phone:"555 555 5555",comments:"Great Scott!!"},onSubmit:function(e,a){return console.log(a)}},l.a.createElement("label",{htmlFor:"example1-name"},"Name:"),l.a.createElement("input",{type:"text",name:"name",id:"example1-name"}),l.a.createElement("label",{htmlFor:"example1-email"},"Email:"),l.a.createElement(f,{watches:"email",validatesWith:x.required},"Email is required"),l.a.createElement(f,{watches:"email",validatesWith:x.email},"Please enter a valid email address"),l.a.createElement("input",{type:"email",name:"email",id:"example1-email"}),l.a.createElement("label",{htmlFor:"example1-phone"},"Telephone:"),l.a.createElement(f,{watches:"phone",validatesWith:x.phone},"Please enter a valid phone number"),l.a.createElement("input",{type:"tel",name:"phone",id:"example1-phone"}),l.a.createElement("label",{htmlFor:"example1-comments"},"Comments:"),l.a.createElement(f,{watches:"comments",validatesWith:x.maxLength(80)},"Maximum length (80 characters) exceeded"),l.a.createElement("textarea",{name:"comments",id:"example1-comments"}),l.a.createElement("input",{type:"submit",value:"Check the console for onSubmit"}))},S=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("section",null,l.a.createElement("h1",null,"react-formguards"),l.a.createElement("h3",null,"A simple, declarative approach to client side validation."),l.a.createElement("span",null,l.a.createElement("a",{href:"https://www.npmjs.com/package/react-formguards"},"npm")," | ",l.a.createElement("a",{href:"https://github.com/NuclearHorseStudios/react-formguards"},"github")),l.a.createElement("div",{className:"example"},l.a.createElement("div",{className:"example-code"},l.a.createElement("h2",null,"Basic Validation"),l.a.createElement("a",{href:"https://github.com/NuclearHorseStudios/react-formguards/blob/master/example/src/examples/example-basic.jsx"},"Source"),l.a.createElement("ol",null,l.a.createElement("li",null,"Just write your form like normal, replacing your <form> tag with a <ValidatedForm> tag.  Pass it an onSubmit function."),l.a.createElement("li",null,"Then add <FormGuard> tags anywhere you'd like a validation error to show up. ",l.a.createElement("br",null)," Each <FormGuard> tag:",l.a.createElement("ul",null,l.a.createElement("li",null,"Watches specified input(s) and validates as needed"),l.a.createElement("li",null,"Becomes a <span> in the DOM when the error shows"),l.a.createElement("li",null,"onSubmit won't be called until all the FormGuard's are satisfied")),l.a.createElement("p",null,"Some basic validators are included -- required, email, phone, maxLength, and minLength"))),l.a.createElement("pre",null,"\n    <ValidatedForm onSubmit={(e, formVals) => console.log(formVals)}>\n      <label htmlFor='example1-name'>Name:</label>\n      <input type='text' name='name' id='example1-name' />\n\n      <label htmlFor='example1-email'>Email:</label>\n      <FormGuard watches='email' validatesWith={validators.required} >\n          Email is required  \n      </FormGuard> \n      <FormGuard watches='email' validatesWith={validators.email} >\n          Please enter a valid email address  \n      </FormGuard> \n      <input type='email' name='email' id='example1-email' />  \n      \n      <label htmlFor='example1-phone'>Telephone:</label>\n      <FormGuard watches='phone' validatesWith={validators.phone} >\n          Please enter a valid phone number  \n      </FormGuard> \n      <input type='tel' name='phone' id='example1-phone' />  \n\n      <label htmlFor='example1-comments'>Comments:</label>\n      <FormGuard watches='comments' validatesWith={validators.maxLength(80)} >\n          Maximum length (80 characters) exceeded\n      </FormGuard> \n      <textarea name='comments' id='example1-comments' />  \n\n      <FormGuard watches='radioButtons' validatesWith={validators.required} >\n          Pick One!  \n      </FormGuard> \n      <input type='radio' name='radioButtons' value='Radio 1' id='example1-radioButtons1' />  \n      <label htmlFor='example1-radioButtons1'>Radio 1</label>\n      <input type='radio' name='radioButtons' value='Radio 2' id='example1-radioButtons2' />  \n      <label htmlFor='example1-radioButtons2'>Radio 2</label>\n      <input type='radio' name='radioButtons' value='Radio 3' id='example1-radioButtons3' />  \n      <label htmlFor='example1-radioButtons3'>Radio 3</label>\n      \n      <input type='submit' value='Check the console for onSubmit' />\n    </ValidatedForm>\n          ")),l.a.createElement("div",{className:"example-implementation"},l.a.createElement(b,null))),l.a.createElement("div",{className:"example"},l.a.createElement("div",{className:"example-code"},l.a.createElement("h2",null,"Custom Validation Functions"),l.a.createElement("a",{href:"https://github.com/NuclearHorseStudios/react-formguards/blob/master/example/src/examples/example-function.jsx"},"Source"),l.a.createElement("p",null,"Just pass a function to validatesWith to use your own validation functions."),l.a.createElement("pre",null,"\n    <ValidatedForm onSubmit={(e, formVals) => console.log(formVals)}>\n\n      <label htmlFor='example2-fzappa'>Must be Frank Zappa:</label>\n      <FormGuard watches='fzappa' validatesWith={ val => val === 'Frank Zappa' } >\n          Value must be \"Frank Zappa\"\n      </FormGuard> \n      <input type='text' name='fzappa' id='example2-fzappa' />  \n      \n      <input type='submit' value='Check the console for onSubmit' />\n    </ValidatedForm>\n            ")),l.a.createElement("div",{className:"example-implementation"},l.a.createElement(y,null))),l.a.createElement("div",{className:"example"},l.a.createElement("div",{className:"example-code"},l.a.createElement("h2",null,"Guarding Multiple Form Elements with one FormGuard"),l.a.createElement("a",{href:"https://github.com/NuclearHorseStudios/react-formguards/blob/master/example/src/examples/example-multiple-watches.jsx"},"Source"),l.a.createElement("p",null,"A FormGuard can watch multiple elements by passing an array to the ",l.a.createElement("i",null,"watches")," prop"),l.a.createElement("p",null,"In this example the ",l.a.createElement("i",null,"validateTwoInputs")," function requires that either ",l.a.createElement("i",null,"input1")," OR ",l.a.createElement("i",null,"input2")," is filled in."),l.a.createElement("pre",null,"\n    function validateTwoInputs (input1, input2) {\n      return (input1 && input1.length > 0) || \n             (input2 && input2.length > 0);\n    }\n\n    [...]\n\n    <ValidatedForm onSubmit={(e, formVals) => console.log(formVals)}>\n\n      <label htmlFor='example3-input1'>Input 1:</label>\n      <input type='text' name='input1' id='example3-input1' />  \n\n      <FormGuard \n          watches={['input1', 'input2']} \n          validatesWith={validateTwoInputs} >\n          \n          Either input 1 OR input 2 is required.\n      </FormGuard> \n\n      <label htmlFor='example3-input2'>Input 2:</label>\n      <input type='text' name='input2' id='example3-input2' />  \n\n      <input type='submit' value='Check the console for onSubmit' />\n    </ValidatedForm>\n            ")),l.a.createElement("div",{className:"example-implementation"},l.a.createElement(g,null))),l.a.createElement("div",{className:"example"},l.a.createElement("div",{className:"example-code"},l.a.createElement("h2",null,"Styling / CSS"),l.a.createElement("a",{href:"https://github.com/NuclearHorseStudios/react-formguards/blob/master/example/src/examples/example-style.jsx"},"Source"),l.a.createElement("p",null,"react-formguards will add the css class 'input-invalid' to form controls that are invalid."),l.a.createElement("p",null,"The span that displays a FormGuard error text will have the css class 'validation-error'"),l.a.createElement("pre",null,"\n    \n    .input-invalid {\n      outline: 3px solid #0000ff;\n    }\n\n    span.validation-error {\n      float: right;\n      font-weight: bold;\n      color: #00ff00;\n    }\n\n    <ValidatedForm onSubmit={(e, formVals) => console.log(formVals)}>\n\n      <label htmlFor='example4-email'>Email:</label>\n      <FormGuard watches='email' validatesWith={validators.required} >\n          Email is required  \n      </FormGuard> \n      <FormGuard watches='email' validatesWith={validators.email} >\n          Please enter a valid email address  \n      </FormGuard> \n      <input type='email' name='email' id='example4-email' />  \n      \n      <input type='submit' value='Check the console for onSubmit' />\n    </ValidatedForm>\n            ")),l.a.createElement("div",{className:"example-implementation"},l.a.createElement(F,null))),l.a.createElement("div",{className:"example"},l.a.createElement("div",{className:"example-code"},l.a.createElement("h2",null,"Passing Preset Values"),l.a.createElement("a",{href:"https://github.com/NuclearHorseStudios/react-formguards/blob/master/example/src/examples/example-values.jsx"},"Source"),l.a.createElement("p",null,"Just pass an object as the formVals prop to preset values in the form."),l.a.createElement("pre",null,"\n    const formVals = {\n      name: 'Emmett Brown',\n      email: 'doc@example.org',\n      comments: 'Great Scott!'\n    };\n\n    [...]\n\n    <ValidatedForm formVals={formVals} onSubmit={(e, formVals) => console.log(formVals)}>\n      <label htmlFor='example1-name'>Name:</label>\n      <input type='text' name='name' id='example1-name' />\n\n      <label htmlFor='example1-email'>Email:</label>\n      <FormGuard watches='email' validatesWith={validators.required} >\n          Email is required  \n      </FormGuard> \n      <FormGuard watches='email' validatesWith={validators.email} >\n          Please enter a valid email address  \n      </FormGuard> \n      <input type='email' name='email' id='example1-email' />  \n      \n      <label htmlFor='example1-phone'>Telephone:</label>\n      <FormGuard watches='phone' validatesWith={validators.phone} >\n          Please enter a valid phone number  \n      </FormGuard> \n      <input type='tel' value='555 555 5555' name='phone' id='example1-phone' />  \n\n      <label htmlFor='example1-comments'>Comments:</label>\n      <FormGuard watches='comments' validatesWith={validators.maxLength(80)} >\n          Maximum length (80 characters) exceeded\n      </FormGuard> \n      <textarea name='comments' id='example1-comments' />  \n      \n      <input type='submit' value='Check the console for onSubmit' />\n    </ValidatedForm>\n            ")),l.a.createElement("div",{className:"example-implementation"},l.a.createElement(w,null)))))};i.a.render(l.a.createElement(S,null),document.getElementById("root"))},3:function(e,a,t){e.exports=t(10)},9:function(e,a,t){}},[[3,1,2]]]);
//# sourceMappingURL=main.04d9c03e.chunk.js.map